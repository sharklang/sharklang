/**
 * generated by Xtext 2.23.0
 */
package com.shark.lang.dd;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Unary Operator</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see com.shark.lang.dd.DdPackage#getUnaryOperator()
 * @model
 * @generated
 */
public enum UnaryOperator implements Enumerator
{
  /**
   * The '<em><b>Op Not</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #OP_NOT_VALUE
   * @generated
   * @ordered
   */
  OP_NOT(0, "opNot", "not"),

  /**
   * The '<em><b>Op Neg</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #OP_NEG_VALUE
   * @generated
   * @ordered
   */
  OP_NEG(1, "opNeg", "-"),

  /**
   * The '<em><b>Str Cast</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #STR_CAST_VALUE
   * @generated
   * @ordered
   */
  STR_CAST(2, "strCast", "str"),

  /**
   * The '<em><b>Int Cast</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INT_CAST_VALUE
   * @generated
   * @ordered
   */
  INT_CAST(3, "intCast", "int"),

  /**
   * The '<em><b>Dec Cast</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DEC_CAST_VALUE
   * @generated
   * @ordered
   */
  DEC_CAST(4, "decCast", "dec"),

  /**
   * The '<em><b>Date Cast</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DATE_CAST_VALUE
   * @generated
   * @ordered
   */
  DATE_CAST(5, "dateCast", "date"),

  /**
   * The '<em><b>Time Cast</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TIME_CAST_VALUE
   * @generated
   * @ordered
   */
  TIME_CAST(6, "timeCast", "time"),

  /**
   * The '<em><b>Op Len</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #OP_LEN_VALUE
   * @generated
   * @ordered
   */
  OP_LEN(7, "opLen", "len"),

  /**
   * The '<em><b>Stamp Cast</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #STAMP_CAST_VALUE
   * @generated
   * @ordered
   */
  STAMP_CAST(8, "stampCast", "stamp");

  /**
   * The '<em><b>Op Not</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #OP_NOT
   * @model name="opNot" literal="not"
   * @generated
   * @ordered
   */
  public static final int OP_NOT_VALUE = 0;

  /**
   * The '<em><b>Op Neg</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #OP_NEG
   * @model name="opNeg" literal="-"
   * @generated
   * @ordered
   */
  public static final int OP_NEG_VALUE = 1;

  /**
   * The '<em><b>Str Cast</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #STR_CAST
   * @model name="strCast" literal="str"
   * @generated
   * @ordered
   */
  public static final int STR_CAST_VALUE = 2;

  /**
   * The '<em><b>Int Cast</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INT_CAST
   * @model name="intCast" literal="int"
   * @generated
   * @ordered
   */
  public static final int INT_CAST_VALUE = 3;

  /**
   * The '<em><b>Dec Cast</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DEC_CAST
   * @model name="decCast" literal="dec"
   * @generated
   * @ordered
   */
  public static final int DEC_CAST_VALUE = 4;

  /**
   * The '<em><b>Date Cast</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DATE_CAST
   * @model name="dateCast" literal="date"
   * @generated
   * @ordered
   */
  public static final int DATE_CAST_VALUE = 5;

  /**
   * The '<em><b>Time Cast</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TIME_CAST
   * @model name="timeCast" literal="time"
   * @generated
   * @ordered
   */
  public static final int TIME_CAST_VALUE = 6;

  /**
   * The '<em><b>Op Len</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #OP_LEN
   * @model name="opLen" literal="len"
   * @generated
   * @ordered
   */
  public static final int OP_LEN_VALUE = 7;

  /**
   * The '<em><b>Stamp Cast</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #STAMP_CAST
   * @model name="stampCast" literal="stamp"
   * @generated
   * @ordered
   */
  public static final int STAMP_CAST_VALUE = 8;

  /**
   * An array of all the '<em><b>Unary Operator</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final UnaryOperator[] VALUES_ARRAY =
    new UnaryOperator[]
    {
      OP_NOT,
      OP_NEG,
      STR_CAST,
      INT_CAST,
      DEC_CAST,
      DATE_CAST,
      TIME_CAST,
      OP_LEN,
      STAMP_CAST,
    };

  /**
   * A public read-only list of all the '<em><b>Unary Operator</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<UnaryOperator> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Unary Operator</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static UnaryOperator get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      UnaryOperator result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Unary Operator</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static UnaryOperator getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      UnaryOperator result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Unary Operator</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static UnaryOperator get(int value)
  {
    switch (value)
    {
      case OP_NOT_VALUE: return OP_NOT;
      case OP_NEG_VALUE: return OP_NEG;
      case STR_CAST_VALUE: return STR_CAST;
      case INT_CAST_VALUE: return INT_CAST;
      case DEC_CAST_VALUE: return DEC_CAST;
      case DATE_CAST_VALUE: return DATE_CAST;
      case TIME_CAST_VALUE: return TIME_CAST;
      case OP_LEN_VALUE: return OP_LEN;
      case STAMP_CAST_VALUE: return STAMP_CAST;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private UnaryOperator(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //UnaryOperator
