/**
 * generated by Xtext 2.23.0
 */
package com.shark.lang.dd.impl;

import com.shark.lang.dd.DdPackage;
import com.shark.lang.dd.Entity;
import com.shark.lang.dd.ListExpression;
import com.shark.lang.dd.Relationship;
import com.shark.lang.dd.TrailComment;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Relationship</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.shark.lang.dd.impl.RelationshipImpl#getCardi1 <em>Cardi1</em>}</li>
 *   <li>{@link com.shark.lang.dd.impl.RelationshipImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.shark.lang.dd.impl.RelationshipImpl#getCardi2 <em>Cardi2</em>}</li>
 *   <li>{@link com.shark.lang.dd.impl.RelationshipImpl#getLinkTo <em>Link To</em>}</li>
 *   <li>{@link com.shark.lang.dd.impl.RelationshipImpl#getRelDesc <em>Rel Desc</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RelationshipImpl extends MinimalEObjectImpl.Container implements Relationship
{
  /**
   * The cached value of the '{@link #getCardi1() <em>Cardi1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCardi1()
   * @generated
   * @ordered
   */
  protected ListExpression cardi1;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getCardi2() <em>Cardi2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCardi2()
   * @generated
   * @ordered
   */
  protected ListExpression cardi2;

  /**
   * The cached value of the '{@link #getLinkTo() <em>Link To</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinkTo()
   * @generated
   * @ordered
   */
  protected Entity linkTo;

  /**
   * The cached value of the '{@link #getRelDesc() <em>Rel Desc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelDesc()
   * @generated
   * @ordered
   */
  protected TrailComment relDesc;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RelationshipImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DdPackage.Literals.RELATIONSHIP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListExpression getCardi1()
  {
    return cardi1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCardi1(ListExpression newCardi1, NotificationChain msgs)
  {
    ListExpression oldCardi1 = cardi1;
    cardi1 = newCardi1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DdPackage.RELATIONSHIP__CARDI1, oldCardi1, newCardi1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCardi1(ListExpression newCardi1)
  {
    if (newCardi1 != cardi1)
    {
      NotificationChain msgs = null;
      if (cardi1 != null)
        msgs = ((InternalEObject)cardi1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DdPackage.RELATIONSHIP__CARDI1, null, msgs);
      if (newCardi1 != null)
        msgs = ((InternalEObject)newCardi1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DdPackage.RELATIONSHIP__CARDI1, null, msgs);
      msgs = basicSetCardi1(newCardi1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.RELATIONSHIP__CARDI1, newCardi1, newCardi1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.RELATIONSHIP__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListExpression getCardi2()
  {
    return cardi2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCardi2(ListExpression newCardi2, NotificationChain msgs)
  {
    ListExpression oldCardi2 = cardi2;
    cardi2 = newCardi2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DdPackage.RELATIONSHIP__CARDI2, oldCardi2, newCardi2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCardi2(ListExpression newCardi2)
  {
    if (newCardi2 != cardi2)
    {
      NotificationChain msgs = null;
      if (cardi2 != null)
        msgs = ((InternalEObject)cardi2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DdPackage.RELATIONSHIP__CARDI2, null, msgs);
      if (newCardi2 != null)
        msgs = ((InternalEObject)newCardi2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DdPackage.RELATIONSHIP__CARDI2, null, msgs);
      msgs = basicSetCardi2(newCardi2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.RELATIONSHIP__CARDI2, newCardi2, newCardi2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity getLinkTo()
  {
    if (linkTo != null && linkTo.eIsProxy())
    {
      InternalEObject oldLinkTo = (InternalEObject)linkTo;
      linkTo = (Entity)eResolveProxy(oldLinkTo);
      if (linkTo != oldLinkTo)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DdPackage.RELATIONSHIP__LINK_TO, oldLinkTo, linkTo));
      }
    }
    return linkTo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity basicGetLinkTo()
  {
    return linkTo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLinkTo(Entity newLinkTo)
  {
    Entity oldLinkTo = linkTo;
    linkTo = newLinkTo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.RELATIONSHIP__LINK_TO, oldLinkTo, linkTo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TrailComment getRelDesc()
  {
    return relDesc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRelDesc(TrailComment newRelDesc, NotificationChain msgs)
  {
    TrailComment oldRelDesc = relDesc;
    relDesc = newRelDesc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DdPackage.RELATIONSHIP__REL_DESC, oldRelDesc, newRelDesc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRelDesc(TrailComment newRelDesc)
  {
    if (newRelDesc != relDesc)
    {
      NotificationChain msgs = null;
      if (relDesc != null)
        msgs = ((InternalEObject)relDesc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DdPackage.RELATIONSHIP__REL_DESC, null, msgs);
      if (newRelDesc != null)
        msgs = ((InternalEObject)newRelDesc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DdPackage.RELATIONSHIP__REL_DESC, null, msgs);
      msgs = basicSetRelDesc(newRelDesc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.RELATIONSHIP__REL_DESC, newRelDesc, newRelDesc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DdPackage.RELATIONSHIP__CARDI1:
        return basicSetCardi1(null, msgs);
      case DdPackage.RELATIONSHIP__CARDI2:
        return basicSetCardi2(null, msgs);
      case DdPackage.RELATIONSHIP__REL_DESC:
        return basicSetRelDesc(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DdPackage.RELATIONSHIP__CARDI1:
        return getCardi1();
      case DdPackage.RELATIONSHIP__NAME:
        return getName();
      case DdPackage.RELATIONSHIP__CARDI2:
        return getCardi2();
      case DdPackage.RELATIONSHIP__LINK_TO:
        if (resolve) return getLinkTo();
        return basicGetLinkTo();
      case DdPackage.RELATIONSHIP__REL_DESC:
        return getRelDesc();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DdPackage.RELATIONSHIP__CARDI1:
        setCardi1((ListExpression)newValue);
        return;
      case DdPackage.RELATIONSHIP__NAME:
        setName((String)newValue);
        return;
      case DdPackage.RELATIONSHIP__CARDI2:
        setCardi2((ListExpression)newValue);
        return;
      case DdPackage.RELATIONSHIP__LINK_TO:
        setLinkTo((Entity)newValue);
        return;
      case DdPackage.RELATIONSHIP__REL_DESC:
        setRelDesc((TrailComment)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DdPackage.RELATIONSHIP__CARDI1:
        setCardi1((ListExpression)null);
        return;
      case DdPackage.RELATIONSHIP__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DdPackage.RELATIONSHIP__CARDI2:
        setCardi2((ListExpression)null);
        return;
      case DdPackage.RELATIONSHIP__LINK_TO:
        setLinkTo((Entity)null);
        return;
      case DdPackage.RELATIONSHIP__REL_DESC:
        setRelDesc((TrailComment)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DdPackage.RELATIONSHIP__CARDI1:
        return cardi1 != null;
      case DdPackage.RELATIONSHIP__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DdPackage.RELATIONSHIP__CARDI2:
        return cardi2 != null;
      case DdPackage.RELATIONSHIP__LINK_TO:
        return linkTo != null;
      case DdPackage.RELATIONSHIP__REL_DESC:
        return relDesc != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //RelationshipImpl
