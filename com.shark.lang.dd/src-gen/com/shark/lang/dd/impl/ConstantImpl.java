/**
 * generated by Xtext 2.23.0
 */
package com.shark.lang.dd.impl;

import com.shark.lang.dd.ArraySize;
import com.shark.lang.dd.AttributeSize;
import com.shark.lang.dd.Constant;
import com.shark.lang.dd.DataType;
import com.shark.lang.dd.DdPackage;
import com.shark.lang.dd.LineComment;
import com.shark.lang.dd.SharkExpression;
import com.shark.lang.dd.TrailComment;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Constant</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.shark.lang.dd.impl.ConstantImpl#getExtraAttrDesc <em>Extra Attr Desc</em>}</li>
 *   <li>{@link com.shark.lang.dd.impl.ConstantImpl#getDataType <em>Data Type</em>}</li>
 *   <li>{@link com.shark.lang.dd.impl.ConstantImpl#getAttributeSize <em>Attribute Size</em>}</li>
 *   <li>{@link com.shark.lang.dd.impl.ConstantImpl#getArraySize <em>Array Size</em>}</li>
 *   <li>{@link com.shark.lang.dd.impl.ConstantImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.shark.lang.dd.impl.ConstantImpl#getDefaultValue <em>Default Value</em>}</li>
 *   <li>{@link com.shark.lang.dd.impl.ConstantImpl#getAttrDesc <em>Attr Desc</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConstantImpl extends MinimalEObjectImpl.Container implements Constant
{
  /**
   * The cached value of the '{@link #getExtraAttrDesc() <em>Extra Attr Desc</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExtraAttrDesc()
   * @generated
   * @ordered
   */
  protected EList<LineComment> extraAttrDesc;

  /**
   * The default value of the '{@link #getDataType() <em>Data Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataType()
   * @generated
   * @ordered
   */
  protected static final DataType DATA_TYPE_EDEFAULT = DataType.STR;

  /**
   * The cached value of the '{@link #getDataType() <em>Data Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataType()
   * @generated
   * @ordered
   */
  protected DataType dataType = DATA_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getAttributeSize() <em>Attribute Size</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeSize()
   * @generated
   * @ordered
   */
  protected AttributeSize attributeSize;

  /**
   * The cached value of the '{@link #getArraySize() <em>Array Size</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArraySize()
   * @generated
   * @ordered
   */
  protected ArraySize arraySize;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getDefaultValue() <em>Default Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefaultValue()
   * @generated
   * @ordered
   */
  protected SharkExpression defaultValue;

  /**
   * The cached value of the '{@link #getAttrDesc() <em>Attr Desc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttrDesc()
   * @generated
   * @ordered
   */
  protected TrailComment attrDesc;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConstantImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DdPackage.Literals.CONSTANT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LineComment> getExtraAttrDesc()
  {
    if (extraAttrDesc == null)
    {
      extraAttrDesc = new EObjectContainmentEList<LineComment>(LineComment.class, this, DdPackage.CONSTANT__EXTRA_ATTR_DESC);
    }
    return extraAttrDesc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataType getDataType()
  {
    return dataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDataType(DataType newDataType)
  {
    DataType oldDataType = dataType;
    dataType = newDataType == null ? DATA_TYPE_EDEFAULT : newDataType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.CONSTANT__DATA_TYPE, oldDataType, dataType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AttributeSize getAttributeSize()
  {
    return attributeSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttributeSize(AttributeSize newAttributeSize, NotificationChain msgs)
  {
    AttributeSize oldAttributeSize = attributeSize;
    attributeSize = newAttributeSize;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DdPackage.CONSTANT__ATTRIBUTE_SIZE, oldAttributeSize, newAttributeSize);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttributeSize(AttributeSize newAttributeSize)
  {
    if (newAttributeSize != attributeSize)
    {
      NotificationChain msgs = null;
      if (attributeSize != null)
        msgs = ((InternalEObject)attributeSize).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DdPackage.CONSTANT__ATTRIBUTE_SIZE, null, msgs);
      if (newAttributeSize != null)
        msgs = ((InternalEObject)newAttributeSize).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DdPackage.CONSTANT__ATTRIBUTE_SIZE, null, msgs);
      msgs = basicSetAttributeSize(newAttributeSize, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.CONSTANT__ATTRIBUTE_SIZE, newAttributeSize, newAttributeSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArraySize getArraySize()
  {
    return arraySize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArraySize(ArraySize newArraySize, NotificationChain msgs)
  {
    ArraySize oldArraySize = arraySize;
    arraySize = newArraySize;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DdPackage.CONSTANT__ARRAY_SIZE, oldArraySize, newArraySize);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArraySize(ArraySize newArraySize)
  {
    if (newArraySize != arraySize)
    {
      NotificationChain msgs = null;
      if (arraySize != null)
        msgs = ((InternalEObject)arraySize).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DdPackage.CONSTANT__ARRAY_SIZE, null, msgs);
      if (newArraySize != null)
        msgs = ((InternalEObject)newArraySize).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DdPackage.CONSTANT__ARRAY_SIZE, null, msgs);
      msgs = basicSetArraySize(newArraySize, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.CONSTANT__ARRAY_SIZE, newArraySize, newArraySize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.CONSTANT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SharkExpression getDefaultValue()
  {
    return defaultValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDefaultValue(SharkExpression newDefaultValue, NotificationChain msgs)
  {
    SharkExpression oldDefaultValue = defaultValue;
    defaultValue = newDefaultValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DdPackage.CONSTANT__DEFAULT_VALUE, oldDefaultValue, newDefaultValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefaultValue(SharkExpression newDefaultValue)
  {
    if (newDefaultValue != defaultValue)
    {
      NotificationChain msgs = null;
      if (defaultValue != null)
        msgs = ((InternalEObject)defaultValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DdPackage.CONSTANT__DEFAULT_VALUE, null, msgs);
      if (newDefaultValue != null)
        msgs = ((InternalEObject)newDefaultValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DdPackage.CONSTANT__DEFAULT_VALUE, null, msgs);
      msgs = basicSetDefaultValue(newDefaultValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.CONSTANT__DEFAULT_VALUE, newDefaultValue, newDefaultValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TrailComment getAttrDesc()
  {
    return attrDesc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttrDesc(TrailComment newAttrDesc, NotificationChain msgs)
  {
    TrailComment oldAttrDesc = attrDesc;
    attrDesc = newAttrDesc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DdPackage.CONSTANT__ATTR_DESC, oldAttrDesc, newAttrDesc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttrDesc(TrailComment newAttrDesc)
  {
    if (newAttrDesc != attrDesc)
    {
      NotificationChain msgs = null;
      if (attrDesc != null)
        msgs = ((InternalEObject)attrDesc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DdPackage.CONSTANT__ATTR_DESC, null, msgs);
      if (newAttrDesc != null)
        msgs = ((InternalEObject)newAttrDesc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DdPackage.CONSTANT__ATTR_DESC, null, msgs);
      msgs = basicSetAttrDesc(newAttrDesc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DdPackage.CONSTANT__ATTR_DESC, newAttrDesc, newAttrDesc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DdPackage.CONSTANT__EXTRA_ATTR_DESC:
        return ((InternalEList<?>)getExtraAttrDesc()).basicRemove(otherEnd, msgs);
      case DdPackage.CONSTANT__ATTRIBUTE_SIZE:
        return basicSetAttributeSize(null, msgs);
      case DdPackage.CONSTANT__ARRAY_SIZE:
        return basicSetArraySize(null, msgs);
      case DdPackage.CONSTANT__DEFAULT_VALUE:
        return basicSetDefaultValue(null, msgs);
      case DdPackage.CONSTANT__ATTR_DESC:
        return basicSetAttrDesc(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DdPackage.CONSTANT__EXTRA_ATTR_DESC:
        return getExtraAttrDesc();
      case DdPackage.CONSTANT__DATA_TYPE:
        return getDataType();
      case DdPackage.CONSTANT__ATTRIBUTE_SIZE:
        return getAttributeSize();
      case DdPackage.CONSTANT__ARRAY_SIZE:
        return getArraySize();
      case DdPackage.CONSTANT__NAME:
        return getName();
      case DdPackage.CONSTANT__DEFAULT_VALUE:
        return getDefaultValue();
      case DdPackage.CONSTANT__ATTR_DESC:
        return getAttrDesc();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DdPackage.CONSTANT__EXTRA_ATTR_DESC:
        getExtraAttrDesc().clear();
        getExtraAttrDesc().addAll((Collection<? extends LineComment>)newValue);
        return;
      case DdPackage.CONSTANT__DATA_TYPE:
        setDataType((DataType)newValue);
        return;
      case DdPackage.CONSTANT__ATTRIBUTE_SIZE:
        setAttributeSize((AttributeSize)newValue);
        return;
      case DdPackage.CONSTANT__ARRAY_SIZE:
        setArraySize((ArraySize)newValue);
        return;
      case DdPackage.CONSTANT__NAME:
        setName((String)newValue);
        return;
      case DdPackage.CONSTANT__DEFAULT_VALUE:
        setDefaultValue((SharkExpression)newValue);
        return;
      case DdPackage.CONSTANT__ATTR_DESC:
        setAttrDesc((TrailComment)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DdPackage.CONSTANT__EXTRA_ATTR_DESC:
        getExtraAttrDesc().clear();
        return;
      case DdPackage.CONSTANT__DATA_TYPE:
        setDataType(DATA_TYPE_EDEFAULT);
        return;
      case DdPackage.CONSTANT__ATTRIBUTE_SIZE:
        setAttributeSize((AttributeSize)null);
        return;
      case DdPackage.CONSTANT__ARRAY_SIZE:
        setArraySize((ArraySize)null);
        return;
      case DdPackage.CONSTANT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DdPackage.CONSTANT__DEFAULT_VALUE:
        setDefaultValue((SharkExpression)null);
        return;
      case DdPackage.CONSTANT__ATTR_DESC:
        setAttrDesc((TrailComment)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DdPackage.CONSTANT__EXTRA_ATTR_DESC:
        return extraAttrDesc != null && !extraAttrDesc.isEmpty();
      case DdPackage.CONSTANT__DATA_TYPE:
        return dataType != DATA_TYPE_EDEFAULT;
      case DdPackage.CONSTANT__ATTRIBUTE_SIZE:
        return attributeSize != null;
      case DdPackage.CONSTANT__ARRAY_SIZE:
        return arraySize != null;
      case DdPackage.CONSTANT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DdPackage.CONSTANT__DEFAULT_VALUE:
        return defaultValue != null;
      case DdPackage.CONSTANT__ATTR_DESC:
        return attrDesc != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (dataType: ");
    result.append(dataType);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ConstantImpl
