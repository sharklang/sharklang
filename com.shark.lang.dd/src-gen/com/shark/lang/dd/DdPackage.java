/**
 * generated by Xtext 2.23.0
 */
package com.shark.lang.dd;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see com.shark.lang.dd.DdFactory
 * @model kind="package"
 * @generated
 */
public interface DdPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "dd";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.sharklang.org/lang/Dd";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "dd";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  DdPackage eINSTANCE = com.shark.lang.dd.impl.DdPackageImpl.init();

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.DataModelFragmentImpl <em>Data Model Fragment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.DataModelFragmentImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getDataModelFragment()
   * @generated
   */
  int DATA_MODEL_FRAGMENT = 0;

  /**
   * The feature id for the '<em><b>Constants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATA_MODEL_FRAGMENT__CONSTANTS = 0;

  /**
   * The feature id for the '<em><b>Entities</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATA_MODEL_FRAGMENT__ENTITIES = 1;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATA_MODEL_FRAGMENT__CONSTRAINTS = 2;

  /**
   * The number of structural features of the '<em>Data Model Fragment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATA_MODEL_FRAGMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.ConstantImpl <em>Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.ConstantImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getConstant()
   * @generated
   */
  int CONSTANT = 1;

  /**
   * The feature id for the '<em><b>Extra Attr Desc</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__EXTRA_ATTR_DESC = 0;

  /**
   * The feature id for the '<em><b>Data Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__DATA_TYPE = 1;

  /**
   * The feature id for the '<em><b>Attribute Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__ATTRIBUTE_SIZE = 2;

  /**
   * The feature id for the '<em><b>Array Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__ARRAY_SIZE = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__NAME = 4;

  /**
   * The feature id for the '<em><b>Default Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__DEFAULT_VALUE = 5;

  /**
   * The feature id for the '<em><b>Attr Desc</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__ATTR_DESC = 6;

  /**
   * The number of structural features of the '<em>Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.EntityImpl <em>Entity</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.EntityImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getEntity()
   * @generated
   */
  int ENTITY = 2;

  /**
   * The feature id for the '<em><b>Entity Desc Lines</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY__ENTITY_DESC_LINES = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY__NAME = 1;

  /**
   * The feature id for the '<em><b>Extends</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY__EXTENDS = 2;

  /**
   * The feature id for the '<em><b>Attributes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY__ATTRIBUTES = 3;

  /**
   * The feature id for the '<em><b>Relationships</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY__RELATIONSHIPS = 4;

  /**
   * The number of structural features of the '<em>Entity</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.AttributeImpl <em>Attribute</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.AttributeImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getAttribute()
   * @generated
   */
  int ATTRIBUTE = 3;

  /**
   * The feature id for the '<em><b>Extra Attr Desc</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__EXTRA_ATTR_DESC = 0;

  /**
   * The feature id for the '<em><b>Data Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__DATA_TYPE = 1;

  /**
   * The feature id for the '<em><b>Attribute Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__ATTRIBUTE_SIZE = 2;

  /**
   * The feature id for the '<em><b>Array Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__ARRAY_SIZE = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__NAME = 4;

  /**
   * The feature id for the '<em><b>Default Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__DEFAULT_VALUE = 5;

  /**
   * The feature id for the '<em><b>Primary Key</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__PRIMARY_KEY = 6;

  /**
   * The feature id for the '<em><b>Mandatory</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__MANDATORY = 7;

  /**
   * The feature id for the '<em><b>Attr Desc</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__ATTR_DESC = 8;

  /**
   * The number of structural features of the '<em>Attribute</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_FEATURE_COUNT = 9;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.AttributeSizeImpl <em>Attribute Size</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.AttributeSizeImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getAttributeSize()
   * @generated
   */
  int ATTRIBUTE_SIZE = 4;

  /**
   * The feature id for the '<em><b>Length</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_SIZE__LENGTH = 0;

  /**
   * The feature id for the '<em><b>Precision</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_SIZE__PRECISION = 1;

  /**
   * The number of structural features of the '<em>Attribute Size</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_SIZE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.ArraySizeImpl <em>Array Size</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.ArraySizeImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getArraySize()
   * @generated
   */
  int ARRAY_SIZE = 5;

  /**
   * The feature id for the '<em><b>Size</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_SIZE__SIZE = 0;

  /**
   * The number of structural features of the '<em>Array Size</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_SIZE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.RelationshipImpl <em>Relationship</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.RelationshipImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getRelationship()
   * @generated
   */
  int RELATIONSHIP = 6;

  /**
   * The feature id for the '<em><b>Cardi1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP__CARDI1 = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP__NAME = 1;

  /**
   * The feature id for the '<em><b>Cardi2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP__CARDI2 = 2;

  /**
   * The feature id for the '<em><b>Link To</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP__LINK_TO = 3;

  /**
   * The feature id for the '<em><b>Rel Desc</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP__REL_DESC = 4;

  /**
   * The number of structural features of the '<em>Relationship</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.ConstraintImpl <em>Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.ConstraintImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getConstraint()
   * @generated
   */
  int CONSTRAINT = 7;

  /**
   * The feature id for the '<em><b>Chk Desc Lines</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__CHK_DESC_LINES = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__NAME = 1;

  /**
   * The feature id for the '<em><b>Check</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__CHECK = 2;

  /**
   * The number of structural features of the '<em>Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.CheckExpressionImpl <em>Check Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.CheckExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getCheckExpression()
   * @generated
   */
  int CHECK_EXPRESSION = 8;

  /**
   * The feature id for the '<em><b>Chk Desc</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHECK_EXPRESSION__CHK_DESC = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHECK_EXPRESSION__NAME = 1;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHECK_EXPRESSION__EXPR = 2;

  /**
   * The number of structural features of the '<em>Check Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHECK_EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.SharkExpressionImpl <em>Shark Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.SharkExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getSharkExpression()
   * @generated
   */
  int SHARK_EXPRESSION = 9;

  /**
   * The number of structural features of the '<em>Shark Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHARK_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.BinaryExpressionImpl <em>Binary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.BinaryExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getBinaryExpression()
   * @generated
   */
  int BINARY_EXPRESSION = 10;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION__LEFT = SHARK_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION__OP = SHARK_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION__RIGHT = SHARK_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Num Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION__NUM_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Str Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION__STR_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Date Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION__DATE_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Bool Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION__BOOL_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 6;

  /**
   * The number of structural features of the '<em>Binary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION_FEATURE_COUNT = SHARK_EXPRESSION_FEATURE_COUNT + 7;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.UnaryExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getUnaryExpression()
   * @generated
   */
  int UNARY_EXPRESSION = 11;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__OP = SHARK_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__LEFT = SHARK_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Num Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__NUM_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Str Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__STR_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Date Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__DATE_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Bool Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__BOOL_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Unary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION_FEATURE_COUNT = SHARK_EXPRESSION_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.AddExpressionImpl <em>Add Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.AddExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getAddExpression()
   * @generated
   */
  int ADD_EXPRESSION = 12;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION__LEFT = SHARK_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION__OP = SHARK_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION__RIGHT = SHARK_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Add Elts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION__ADD_ELTS = SHARK_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Checked</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION__CHECKED = SHARK_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Add Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION_FEATURE_COUNT = SHARK_EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.AddExpressionEltImpl <em>Add Expression Elt</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.AddExpressionEltImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getAddExpressionElt()
   * @generated
   */
  int ADD_EXPRESSION_ELT = 13;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION_ELT__OP = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION_ELT__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Add Expression Elt</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION_ELT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.MultExpressionImpl <em>Mult Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.MultExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getMultExpression()
   * @generated
   */
  int MULT_EXPRESSION = 14;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPRESSION__LEFT = SHARK_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPRESSION__OP = SHARK_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPRESSION__RIGHT = SHARK_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Mult Elts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPRESSION__MULT_ELTS = SHARK_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Checked</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPRESSION__CHECKED = SHARK_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Mult Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPRESSION_FEATURE_COUNT = SHARK_EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.MultExpressionEltImpl <em>Mult Expression Elt</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.MultExpressionEltImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getMultExpressionElt()
   * @generated
   */
  int MULT_EXPRESSION_ELT = 15;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPRESSION_ELT__OP = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPRESSION_ELT__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Mult Expression Elt</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPRESSION_ELT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.AndExpressionImpl <em>And Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.AndExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getAndExpression()
   * @generated
   */
  int AND_EXPRESSION = 16;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__LEFT = SHARK_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__OP = SHARK_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__RIGHT = SHARK_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>And Elts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__AND_ELTS = SHARK_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Checked</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__CHECKED = SHARK_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>And Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION_FEATURE_COUNT = SHARK_EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.AndExpressionEltImpl <em>And Expression Elt</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.AndExpressionEltImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getAndExpressionElt()
   * @generated
   */
  int AND_EXPRESSION_ELT = 17;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION_ELT__OP = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION_ELT__RIGHT = 1;

  /**
   * The number of structural features of the '<em>And Expression Elt</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION_ELT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.OrExpressionImpl <em>Or Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.OrExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getOrExpression()
   * @generated
   */
  int OR_EXPRESSION = 18;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__LEFT = SHARK_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__OP = SHARK_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__RIGHT = SHARK_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Or Elts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__OR_ELTS = SHARK_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Checked</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__CHECKED = SHARK_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Or Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION_FEATURE_COUNT = SHARK_EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.OrExpressionEltImpl <em>Or Expression Elt</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.OrExpressionEltImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getOrExpressionElt()
   * @generated
   */
  int OR_EXPRESSION_ELT = 19;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION_ELT__OP = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION_ELT__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Or Expression Elt</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION_ELT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.CatExpressionImpl <em>Cat Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.CatExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getCatExpression()
   * @generated
   */
  int CAT_EXPRESSION = 20;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPRESSION__LEFT = SHARK_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPRESSION__OP = SHARK_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPRESSION__RIGHT = SHARK_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Cat Elts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPRESSION__CAT_ELTS = SHARK_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Checked</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPRESSION__CHECKED = SHARK_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Cat Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPRESSION_FEATURE_COUNT = SHARK_EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.CatExpressionEltImpl <em>Cat Expression Elt</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.CatExpressionEltImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getCatExpressionElt()
   * @generated
   */
  int CAT_EXPRESSION_ELT = 21;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPRESSION_ELT__OP = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPRESSION_ELT__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Cat Expression Elt</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPRESSION_ELT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.ListExpressionImpl <em>List Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.ListExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getListExpression()
   * @generated
   */
  int LIST_EXPRESSION = 22;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__OP = SHARK_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__LEFT = SHARK_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>List Elts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__LIST_ELTS = SHARK_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Num Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__NUM_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Str Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__STR_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Date Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__DATE_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Bool Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__BOOL_TYPE = SHARK_EXPRESSION_FEATURE_COUNT + 6;

  /**
   * The feature id for the '<em><b>Range</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__RANGE = SHARK_EXPRESSION_FEATURE_COUNT + 7;

  /**
   * The number of structural features of the '<em>List Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION_FEATURE_COUNT = SHARK_EXPRESSION_FEATURE_COUNT + 8;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.ListExpressionEltImpl <em>List Expression Elt</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.ListExpressionEltImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getListExpressionElt()
   * @generated
   */
  int LIST_EXPRESSION_ELT = 23;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION_ELT__OP = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION_ELT__RIGHT = 1;

  /**
   * The number of structural features of the '<em>List Expression Elt</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION_ELT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.TerminalExpressionImpl <em>Terminal Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.TerminalExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getTerminalExpression()
   * @generated
   */
  int TERMINAL_EXPRESSION = 24;

  /**
   * The number of structural features of the '<em>Terminal Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPRESSION_FEATURE_COUNT = SHARK_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.LineCommentImpl <em>Line Comment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.LineCommentImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getLineComment()
   * @generated
   */
  int LINE_COMMENT = 25;

  /**
   * The number of structural features of the '<em>Line Comment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_COMMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.TrailCommentImpl <em>Trail Comment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.TrailCommentImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getTrailComment()
   * @generated
   */
  int TRAIL_COMMENT = 26;

  /**
   * The number of structural features of the '<em>Trail Comment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRAIL_COMMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.StrValueImpl <em>Str Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.StrValueImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getStrValue()
   * @generated
   */
  int STR_VALUE = 27;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STR_VALUE__VALUE = TERMINAL_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Str Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STR_VALUE_FEATURE_COUNT = TERMINAL_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.IntValueImpl <em>Int Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.IntValueImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getIntValue()
   * @generated
   */
  int INT_VALUE = 28;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_VALUE__VALUE = TERMINAL_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Int Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_VALUE_FEATURE_COUNT = TERMINAL_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.DecValueImpl <em>Dec Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.DecValueImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getDecValue()
   * @generated
   */
  int DEC_VALUE = 29;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_VALUE__VALUE = TERMINAL_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Dec Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_VALUE_FEATURE_COUNT = TERMINAL_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.ChrValueImpl <em>Chr Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.ChrValueImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getChrValue()
   * @generated
   */
  int CHR_VALUE = 30;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHR_VALUE__VALUE = TERMINAL_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Chr Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHR_VALUE_FEATURE_COUNT = TERMINAL_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.CstValueImpl <em>Cst Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.CstValueImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getCstValue()
   * @generated
   */
  int CST_VALUE = 31;

  /**
   * The feature id for the '<em><b>Value</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CST_VALUE__VALUE = TERMINAL_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Cst Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CST_VALUE_FEATURE_COUNT = TERMINAL_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.BoolValueImpl <em>Bool Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.BoolValueImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getBoolValue()
   * @generated
   */
  int BOOL_VALUE = 32;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_VALUE__VALUE = TERMINAL_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Bool Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_VALUE_FEATURE_COUNT = TERMINAL_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.UnsetValueImpl <em>Unset Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.UnsetValueImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getUnsetValue()
   * @generated
   */
  int UNSET_VALUE = 33;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSET_VALUE__VALUE = TERMINAL_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Unset Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSET_VALUE_FEATURE_COUNT = TERMINAL_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.IdentifierExpressionImpl <em>Identifier Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.IdentifierExpressionImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getIdentifierExpression()
   * @generated
   */
  int IDENTIFIER_EXPRESSION = 34;

  /**
   * The feature id for the '<em><b>Value</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_EXPRESSION__VALUE = TERMINAL_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Identifier Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_EXPRESSION_FEATURE_COUNT = TERMINAL_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.impl.CommentImpl <em>Comment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.impl.CommentImpl
   * @see com.shark.lang.dd.impl.DdPackageImpl#getComment()
   * @generated
   */
  int COMMENT = 35;

  /**
   * The feature id for the '<em><b>Line</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMENT__LINE = LINE_COMMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Comment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMENT_FEATURE_COUNT = LINE_COMMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.BinaryOperator <em>Binary Operator</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.BinaryOperator
   * @see com.shark.lang.dd.impl.DdPackageImpl#getBinaryOperator()
   * @generated
   */
  int BINARY_OPERATOR = 36;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.UnaryOperator <em>Unary Operator</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.UnaryOperator
   * @see com.shark.lang.dd.impl.DdPackageImpl#getUnaryOperator()
   * @generated
   */
  int UNARY_OPERATOR = 37;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.Unset <em>Unset</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.Unset
   * @see com.shark.lang.dd.impl.DdPackageImpl#getUnset()
   * @generated
   */
  int UNSET = 38;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.Boolean <em>Boolean</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.Boolean
   * @see com.shark.lang.dd.impl.DdPackageImpl#getBoolean()
   * @generated
   */
  int BOOLEAN = 39;

  /**
   * The meta object id for the '{@link com.shark.lang.dd.DataType <em>Data Type</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.shark.lang.dd.DataType
   * @see com.shark.lang.dd.impl.DdPackageImpl#getDataType()
   * @generated
   */
  int DATA_TYPE = 40;


  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.DataModelFragment <em>Data Model Fragment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Data Model Fragment</em>'.
   * @see com.shark.lang.dd.DataModelFragment
   * @generated
   */
  EClass getDataModelFragment();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.DataModelFragment#getConstants <em>Constants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constants</em>'.
   * @see com.shark.lang.dd.DataModelFragment#getConstants()
   * @see #getDataModelFragment()
   * @generated
   */
  EReference getDataModelFragment_Constants();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.DataModelFragment#getEntities <em>Entities</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Entities</em>'.
   * @see com.shark.lang.dd.DataModelFragment#getEntities()
   * @see #getDataModelFragment()
   * @generated
   */
  EReference getDataModelFragment_Entities();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.DataModelFragment#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constraints</em>'.
   * @see com.shark.lang.dd.DataModelFragment#getConstraints()
   * @see #getDataModelFragment()
   * @generated
   */
  EReference getDataModelFragment_Constraints();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.Constant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constant</em>'.
   * @see com.shark.lang.dd.Constant
   * @generated
   */
  EClass getConstant();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.Constant#getExtraAttrDesc <em>Extra Attr Desc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Extra Attr Desc</em>'.
   * @see com.shark.lang.dd.Constant#getExtraAttrDesc()
   * @see #getConstant()
   * @generated
   */
  EReference getConstant_ExtraAttrDesc();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.Constant#getDataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Data Type</em>'.
   * @see com.shark.lang.dd.Constant#getDataType()
   * @see #getConstant()
   * @generated
   */
  EAttribute getConstant_DataType();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Constant#getAttributeSize <em>Attribute Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attribute Size</em>'.
   * @see com.shark.lang.dd.Constant#getAttributeSize()
   * @see #getConstant()
   * @generated
   */
  EReference getConstant_AttributeSize();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Constant#getArraySize <em>Array Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Array Size</em>'.
   * @see com.shark.lang.dd.Constant#getArraySize()
   * @see #getConstant()
   * @generated
   */
  EReference getConstant_ArraySize();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.Constant#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.shark.lang.dd.Constant#getName()
   * @see #getConstant()
   * @generated
   */
  EAttribute getConstant_Name();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Constant#getDefaultValue <em>Default Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Default Value</em>'.
   * @see com.shark.lang.dd.Constant#getDefaultValue()
   * @see #getConstant()
   * @generated
   */
  EReference getConstant_DefaultValue();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Constant#getAttrDesc <em>Attr Desc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attr Desc</em>'.
   * @see com.shark.lang.dd.Constant#getAttrDesc()
   * @see #getConstant()
   * @generated
   */
  EReference getConstant_AttrDesc();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.Entity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Entity</em>'.
   * @see com.shark.lang.dd.Entity
   * @generated
   */
  EClass getEntity();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.Entity#getEntityDescLines <em>Entity Desc Lines</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Entity Desc Lines</em>'.
   * @see com.shark.lang.dd.Entity#getEntityDescLines()
   * @see #getEntity()
   * @generated
   */
  EReference getEntity_EntityDescLines();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.Entity#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.shark.lang.dd.Entity#getName()
   * @see #getEntity()
   * @generated
   */
  EAttribute getEntity_Name();

  /**
   * Returns the meta object for the reference '{@link com.shark.lang.dd.Entity#getExtends <em>Extends</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Extends</em>'.
   * @see com.shark.lang.dd.Entity#getExtends()
   * @see #getEntity()
   * @generated
   */
  EReference getEntity_Extends();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.Entity#getAttributes <em>Attributes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Attributes</em>'.
   * @see com.shark.lang.dd.Entity#getAttributes()
   * @see #getEntity()
   * @generated
   */
  EReference getEntity_Attributes();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.Entity#getRelationships <em>Relationships</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Relationships</em>'.
   * @see com.shark.lang.dd.Entity#getRelationships()
   * @see #getEntity()
   * @generated
   */
  EReference getEntity_Relationships();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.Attribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Attribute</em>'.
   * @see com.shark.lang.dd.Attribute
   * @generated
   */
  EClass getAttribute();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.Attribute#getExtraAttrDesc <em>Extra Attr Desc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Extra Attr Desc</em>'.
   * @see com.shark.lang.dd.Attribute#getExtraAttrDesc()
   * @see #getAttribute()
   * @generated
   */
  EReference getAttribute_ExtraAttrDesc();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.Attribute#getDataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Data Type</em>'.
   * @see com.shark.lang.dd.Attribute#getDataType()
   * @see #getAttribute()
   * @generated
   */
  EAttribute getAttribute_DataType();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Attribute#getAttributeSize <em>Attribute Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attribute Size</em>'.
   * @see com.shark.lang.dd.Attribute#getAttributeSize()
   * @see #getAttribute()
   * @generated
   */
  EReference getAttribute_AttributeSize();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Attribute#getArraySize <em>Array Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Array Size</em>'.
   * @see com.shark.lang.dd.Attribute#getArraySize()
   * @see #getAttribute()
   * @generated
   */
  EReference getAttribute_ArraySize();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.Attribute#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.shark.lang.dd.Attribute#getName()
   * @see #getAttribute()
   * @generated
   */
  EAttribute getAttribute_Name();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Attribute#getDefaultValue <em>Default Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Default Value</em>'.
   * @see com.shark.lang.dd.Attribute#getDefaultValue()
   * @see #getAttribute()
   * @generated
   */
  EReference getAttribute_DefaultValue();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.Attribute#isPrimaryKey <em>Primary Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Primary Key</em>'.
   * @see com.shark.lang.dd.Attribute#isPrimaryKey()
   * @see #getAttribute()
   * @generated
   */
  EAttribute getAttribute_PrimaryKey();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.Attribute#isMandatory <em>Mandatory</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Mandatory</em>'.
   * @see com.shark.lang.dd.Attribute#isMandatory()
   * @see #getAttribute()
   * @generated
   */
  EAttribute getAttribute_Mandatory();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Attribute#getAttrDesc <em>Attr Desc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attr Desc</em>'.
   * @see com.shark.lang.dd.Attribute#getAttrDesc()
   * @see #getAttribute()
   * @generated
   */
  EReference getAttribute_AttrDesc();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.AttributeSize <em>Attribute Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Attribute Size</em>'.
   * @see com.shark.lang.dd.AttributeSize
   * @generated
   */
  EClass getAttributeSize();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.AttributeSize#getLength <em>Length</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Length</em>'.
   * @see com.shark.lang.dd.AttributeSize#getLength()
   * @see #getAttributeSize()
   * @generated
   */
  EAttribute getAttributeSize_Length();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.AttributeSize#getPrecision <em>Precision</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Precision</em>'.
   * @see com.shark.lang.dd.AttributeSize#getPrecision()
   * @see #getAttributeSize()
   * @generated
   */
  EAttribute getAttributeSize_Precision();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.ArraySize <em>Array Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Array Size</em>'.
   * @see com.shark.lang.dd.ArraySize
   * @generated
   */
  EClass getArraySize();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.ArraySize#getSize <em>Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Size</em>'.
   * @see com.shark.lang.dd.ArraySize#getSize()
   * @see #getArraySize()
   * @generated
   */
  EAttribute getArraySize_Size();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.Relationship <em>Relationship</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relationship</em>'.
   * @see com.shark.lang.dd.Relationship
   * @generated
   */
  EClass getRelationship();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Relationship#getCardi1 <em>Cardi1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cardi1</em>'.
   * @see com.shark.lang.dd.Relationship#getCardi1()
   * @see #getRelationship()
   * @generated
   */
  EReference getRelationship_Cardi1();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.Relationship#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.shark.lang.dd.Relationship#getName()
   * @see #getRelationship()
   * @generated
   */
  EAttribute getRelationship_Name();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Relationship#getCardi2 <em>Cardi2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cardi2</em>'.
   * @see com.shark.lang.dd.Relationship#getCardi2()
   * @see #getRelationship()
   * @generated
   */
  EReference getRelationship_Cardi2();

  /**
   * Returns the meta object for the reference '{@link com.shark.lang.dd.Relationship#getLinkTo <em>Link To</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Link To</em>'.
   * @see com.shark.lang.dd.Relationship#getLinkTo()
   * @see #getRelationship()
   * @generated
   */
  EReference getRelationship_LinkTo();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.Relationship#getRelDesc <em>Rel Desc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rel Desc</em>'.
   * @see com.shark.lang.dd.Relationship#getRelDesc()
   * @see #getRelationship()
   * @generated
   */
  EReference getRelationship_RelDesc();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.Constraint <em>Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constraint</em>'.
   * @see com.shark.lang.dd.Constraint
   * @generated
   */
  EClass getConstraint();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.Constraint#getChkDescLines <em>Chk Desc Lines</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Chk Desc Lines</em>'.
   * @see com.shark.lang.dd.Constraint#getChkDescLines()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_ChkDescLines();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.Constraint#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.shark.lang.dd.Constraint#getName()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_Name();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.Constraint#getCheck <em>Check</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Check</em>'.
   * @see com.shark.lang.dd.Constraint#getCheck()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Check();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.CheckExpression <em>Check Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Check Expression</em>'.
   * @see com.shark.lang.dd.CheckExpression
   * @generated
   */
  EClass getCheckExpression();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.CheckExpression#getChkDesc <em>Chk Desc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Chk Desc</em>'.
   * @see com.shark.lang.dd.CheckExpression#getChkDesc()
   * @see #getCheckExpression()
   * @generated
   */
  EReference getCheckExpression_ChkDesc();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.CheckExpression#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.shark.lang.dd.CheckExpression#getName()
   * @see #getCheckExpression()
   * @generated
   */
  EAttribute getCheckExpression_Name();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.CheckExpression#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see com.shark.lang.dd.CheckExpression#getExpr()
   * @see #getCheckExpression()
   * @generated
   */
  EReference getCheckExpression_Expr();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.SharkExpression <em>Shark Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Shark Expression</em>'.
   * @see com.shark.lang.dd.SharkExpression
   * @generated
   */
  EClass getSharkExpression();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.BinaryExpression <em>Binary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Binary Expression</em>'.
   * @see com.shark.lang.dd.BinaryExpression
   * @generated
   */
  EClass getBinaryExpression();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.BinaryExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.shark.lang.dd.BinaryExpression#getLeft()
   * @see #getBinaryExpression()
   * @generated
   */
  EReference getBinaryExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.BinaryExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.BinaryExpression#getOp()
   * @see #getBinaryExpression()
   * @generated
   */
  EAttribute getBinaryExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.BinaryExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.BinaryExpression#getRight()
   * @see #getBinaryExpression()
   * @generated
   */
  EReference getBinaryExpression_Right();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.BinaryExpression#isNumType <em>Num Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num Type</em>'.
   * @see com.shark.lang.dd.BinaryExpression#isNumType()
   * @see #getBinaryExpression()
   * @generated
   */
  EAttribute getBinaryExpression_NumType();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.BinaryExpression#isStrType <em>Str Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Str Type</em>'.
   * @see com.shark.lang.dd.BinaryExpression#isStrType()
   * @see #getBinaryExpression()
   * @generated
   */
  EAttribute getBinaryExpression_StrType();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.BinaryExpression#isDateType <em>Date Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Date Type</em>'.
   * @see com.shark.lang.dd.BinaryExpression#isDateType()
   * @see #getBinaryExpression()
   * @generated
   */
  EAttribute getBinaryExpression_DateType();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.BinaryExpression#isBoolType <em>Bool Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bool Type</em>'.
   * @see com.shark.lang.dd.BinaryExpression#isBoolType()
   * @see #getBinaryExpression()
   * @generated
   */
  EAttribute getBinaryExpression_BoolType();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.UnaryExpression <em>Unary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Expression</em>'.
   * @see com.shark.lang.dd.UnaryExpression
   * @generated
   */
  EClass getUnaryExpression();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.UnaryExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.UnaryExpression#getOp()
   * @see #getUnaryExpression()
   * @generated
   */
  EAttribute getUnaryExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.UnaryExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.shark.lang.dd.UnaryExpression#getLeft()
   * @see #getUnaryExpression()
   * @generated
   */
  EReference getUnaryExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.UnaryExpression#isNumType <em>Num Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num Type</em>'.
   * @see com.shark.lang.dd.UnaryExpression#isNumType()
   * @see #getUnaryExpression()
   * @generated
   */
  EAttribute getUnaryExpression_NumType();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.UnaryExpression#isStrType <em>Str Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Str Type</em>'.
   * @see com.shark.lang.dd.UnaryExpression#isStrType()
   * @see #getUnaryExpression()
   * @generated
   */
  EAttribute getUnaryExpression_StrType();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.UnaryExpression#isDateType <em>Date Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Date Type</em>'.
   * @see com.shark.lang.dd.UnaryExpression#isDateType()
   * @see #getUnaryExpression()
   * @generated
   */
  EAttribute getUnaryExpression_DateType();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.UnaryExpression#isBoolType <em>Bool Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bool Type</em>'.
   * @see com.shark.lang.dd.UnaryExpression#isBoolType()
   * @see #getUnaryExpression()
   * @generated
   */
  EAttribute getUnaryExpression_BoolType();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.AddExpression <em>Add Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Add Expression</em>'.
   * @see com.shark.lang.dd.AddExpression
   * @generated
   */
  EClass getAddExpression();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.AddExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.shark.lang.dd.AddExpression#getLeft()
   * @see #getAddExpression()
   * @generated
   */
  EReference getAddExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.AddExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.AddExpression#getOp()
   * @see #getAddExpression()
   * @generated
   */
  EAttribute getAddExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.AddExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.AddExpression#getRight()
   * @see #getAddExpression()
   * @generated
   */
  EReference getAddExpression_Right();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.AddExpression#getAddElts <em>Add Elts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Add Elts</em>'.
   * @see com.shark.lang.dd.AddExpression#getAddElts()
   * @see #getAddExpression()
   * @generated
   */
  EReference getAddExpression_AddElts();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.AddExpression#isChecked <em>Checked</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Checked</em>'.
   * @see com.shark.lang.dd.AddExpression#isChecked()
   * @see #getAddExpression()
   * @generated
   */
  EAttribute getAddExpression_Checked();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.AddExpressionElt <em>Add Expression Elt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Add Expression Elt</em>'.
   * @see com.shark.lang.dd.AddExpressionElt
   * @generated
   */
  EClass getAddExpressionElt();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.AddExpressionElt#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.AddExpressionElt#getOp()
   * @see #getAddExpressionElt()
   * @generated
   */
  EAttribute getAddExpressionElt_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.AddExpressionElt#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.AddExpressionElt#getRight()
   * @see #getAddExpressionElt()
   * @generated
   */
  EReference getAddExpressionElt_Right();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.MultExpression <em>Mult Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mult Expression</em>'.
   * @see com.shark.lang.dd.MultExpression
   * @generated
   */
  EClass getMultExpression();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.MultExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.shark.lang.dd.MultExpression#getLeft()
   * @see #getMultExpression()
   * @generated
   */
  EReference getMultExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.MultExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.MultExpression#getOp()
   * @see #getMultExpression()
   * @generated
   */
  EAttribute getMultExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.MultExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.MultExpression#getRight()
   * @see #getMultExpression()
   * @generated
   */
  EReference getMultExpression_Right();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.MultExpression#getMultElts <em>Mult Elts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Mult Elts</em>'.
   * @see com.shark.lang.dd.MultExpression#getMultElts()
   * @see #getMultExpression()
   * @generated
   */
  EReference getMultExpression_MultElts();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.MultExpression#isChecked <em>Checked</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Checked</em>'.
   * @see com.shark.lang.dd.MultExpression#isChecked()
   * @see #getMultExpression()
   * @generated
   */
  EAttribute getMultExpression_Checked();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.MultExpressionElt <em>Mult Expression Elt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mult Expression Elt</em>'.
   * @see com.shark.lang.dd.MultExpressionElt
   * @generated
   */
  EClass getMultExpressionElt();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.MultExpressionElt#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.MultExpressionElt#getOp()
   * @see #getMultExpressionElt()
   * @generated
   */
  EAttribute getMultExpressionElt_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.MultExpressionElt#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.MultExpressionElt#getRight()
   * @see #getMultExpressionElt()
   * @generated
   */
  EReference getMultExpressionElt_Right();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.AndExpression <em>And Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And Expression</em>'.
   * @see com.shark.lang.dd.AndExpression
   * @generated
   */
  EClass getAndExpression();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.AndExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.shark.lang.dd.AndExpression#getLeft()
   * @see #getAndExpression()
   * @generated
   */
  EReference getAndExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.AndExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.AndExpression#getOp()
   * @see #getAndExpression()
   * @generated
   */
  EAttribute getAndExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.AndExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.AndExpression#getRight()
   * @see #getAndExpression()
   * @generated
   */
  EReference getAndExpression_Right();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.AndExpression#getAndElts <em>And Elts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>And Elts</em>'.
   * @see com.shark.lang.dd.AndExpression#getAndElts()
   * @see #getAndExpression()
   * @generated
   */
  EReference getAndExpression_AndElts();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.AndExpression#isChecked <em>Checked</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Checked</em>'.
   * @see com.shark.lang.dd.AndExpression#isChecked()
   * @see #getAndExpression()
   * @generated
   */
  EAttribute getAndExpression_Checked();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.AndExpressionElt <em>And Expression Elt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And Expression Elt</em>'.
   * @see com.shark.lang.dd.AndExpressionElt
   * @generated
   */
  EClass getAndExpressionElt();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.AndExpressionElt#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.AndExpressionElt#getOp()
   * @see #getAndExpressionElt()
   * @generated
   */
  EAttribute getAndExpressionElt_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.AndExpressionElt#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.AndExpressionElt#getRight()
   * @see #getAndExpressionElt()
   * @generated
   */
  EReference getAndExpressionElt_Right();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.OrExpression <em>Or Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or Expression</em>'.
   * @see com.shark.lang.dd.OrExpression
   * @generated
   */
  EClass getOrExpression();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.OrExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.shark.lang.dd.OrExpression#getLeft()
   * @see #getOrExpression()
   * @generated
   */
  EReference getOrExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.OrExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.OrExpression#getOp()
   * @see #getOrExpression()
   * @generated
   */
  EAttribute getOrExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.OrExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.OrExpression#getRight()
   * @see #getOrExpression()
   * @generated
   */
  EReference getOrExpression_Right();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.OrExpression#getOrElts <em>Or Elts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Or Elts</em>'.
   * @see com.shark.lang.dd.OrExpression#getOrElts()
   * @see #getOrExpression()
   * @generated
   */
  EReference getOrExpression_OrElts();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.OrExpression#isChecked <em>Checked</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Checked</em>'.
   * @see com.shark.lang.dd.OrExpression#isChecked()
   * @see #getOrExpression()
   * @generated
   */
  EAttribute getOrExpression_Checked();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.OrExpressionElt <em>Or Expression Elt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or Expression Elt</em>'.
   * @see com.shark.lang.dd.OrExpressionElt
   * @generated
   */
  EClass getOrExpressionElt();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.OrExpressionElt#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.OrExpressionElt#getOp()
   * @see #getOrExpressionElt()
   * @generated
   */
  EAttribute getOrExpressionElt_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.OrExpressionElt#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.OrExpressionElt#getRight()
   * @see #getOrExpressionElt()
   * @generated
   */
  EReference getOrExpressionElt_Right();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.CatExpression <em>Cat Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cat Expression</em>'.
   * @see com.shark.lang.dd.CatExpression
   * @generated
   */
  EClass getCatExpression();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.CatExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.shark.lang.dd.CatExpression#getLeft()
   * @see #getCatExpression()
   * @generated
   */
  EReference getCatExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.CatExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.CatExpression#getOp()
   * @see #getCatExpression()
   * @generated
   */
  EAttribute getCatExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.CatExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.CatExpression#getRight()
   * @see #getCatExpression()
   * @generated
   */
  EReference getCatExpression_Right();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.CatExpression#getCatElts <em>Cat Elts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Cat Elts</em>'.
   * @see com.shark.lang.dd.CatExpression#getCatElts()
   * @see #getCatExpression()
   * @generated
   */
  EReference getCatExpression_CatElts();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.CatExpression#isChecked <em>Checked</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Checked</em>'.
   * @see com.shark.lang.dd.CatExpression#isChecked()
   * @see #getCatExpression()
   * @generated
   */
  EAttribute getCatExpression_Checked();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.CatExpressionElt <em>Cat Expression Elt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cat Expression Elt</em>'.
   * @see com.shark.lang.dd.CatExpressionElt
   * @generated
   */
  EClass getCatExpressionElt();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.CatExpressionElt#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.CatExpressionElt#getOp()
   * @see #getCatExpressionElt()
   * @generated
   */
  EAttribute getCatExpressionElt_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.CatExpressionElt#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.CatExpressionElt#getRight()
   * @see #getCatExpressionElt()
   * @generated
   */
  EReference getCatExpressionElt_Right();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.ListExpression <em>List Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Expression</em>'.
   * @see com.shark.lang.dd.ListExpression
   * @generated
   */
  EClass getListExpression();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.ListExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.ListExpression#getOp()
   * @see #getListExpression()
   * @generated
   */
  EAttribute getListExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.ListExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.shark.lang.dd.ListExpression#getLeft()
   * @see #getListExpression()
   * @generated
   */
  EReference getListExpression_Left();

  /**
   * Returns the meta object for the containment reference list '{@link com.shark.lang.dd.ListExpression#getListElts <em>List Elts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>List Elts</em>'.
   * @see com.shark.lang.dd.ListExpression#getListElts()
   * @see #getListExpression()
   * @generated
   */
  EReference getListExpression_ListElts();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.ListExpression#isNumType <em>Num Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num Type</em>'.
   * @see com.shark.lang.dd.ListExpression#isNumType()
   * @see #getListExpression()
   * @generated
   */
  EAttribute getListExpression_NumType();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.ListExpression#isStrType <em>Str Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Str Type</em>'.
   * @see com.shark.lang.dd.ListExpression#isStrType()
   * @see #getListExpression()
   * @generated
   */
  EAttribute getListExpression_StrType();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.ListExpression#isDateType <em>Date Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Date Type</em>'.
   * @see com.shark.lang.dd.ListExpression#isDateType()
   * @see #getListExpression()
   * @generated
   */
  EAttribute getListExpression_DateType();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.ListExpression#isBoolType <em>Bool Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bool Type</em>'.
   * @see com.shark.lang.dd.ListExpression#isBoolType()
   * @see #getListExpression()
   * @generated
   */
  EAttribute getListExpression_BoolType();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.ListExpression#getRange <em>Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Range</em>'.
   * @see com.shark.lang.dd.ListExpression#getRange()
   * @see #getListExpression()
   * @generated
   */
  EAttribute getListExpression_Range();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.ListExpressionElt <em>List Expression Elt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Expression Elt</em>'.
   * @see com.shark.lang.dd.ListExpressionElt
   * @generated
   */
  EClass getListExpressionElt();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.ListExpressionElt#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.shark.lang.dd.ListExpressionElt#getOp()
   * @see #getListExpressionElt()
   * @generated
   */
  EAttribute getListExpressionElt_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.shark.lang.dd.ListExpressionElt#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.shark.lang.dd.ListExpressionElt#getRight()
   * @see #getListExpressionElt()
   * @generated
   */
  EReference getListExpressionElt_Right();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.TerminalExpression <em>Terminal Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Terminal Expression</em>'.
   * @see com.shark.lang.dd.TerminalExpression
   * @generated
   */
  EClass getTerminalExpression();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.LineComment <em>Line Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Line Comment</em>'.
   * @see com.shark.lang.dd.LineComment
   * @generated
   */
  EClass getLineComment();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.TrailComment <em>Trail Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Trail Comment</em>'.
   * @see com.shark.lang.dd.TrailComment
   * @generated
   */
  EClass getTrailComment();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.StrValue <em>Str Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Str Value</em>'.
   * @see com.shark.lang.dd.StrValue
   * @generated
   */
  EClass getStrValue();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.StrValue#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.shark.lang.dd.StrValue#getValue()
   * @see #getStrValue()
   * @generated
   */
  EAttribute getStrValue_Value();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.IntValue <em>Int Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Value</em>'.
   * @see com.shark.lang.dd.IntValue
   * @generated
   */
  EClass getIntValue();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.IntValue#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.shark.lang.dd.IntValue#getValue()
   * @see #getIntValue()
   * @generated
   */
  EAttribute getIntValue_Value();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.DecValue <em>Dec Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dec Value</em>'.
   * @see com.shark.lang.dd.DecValue
   * @generated
   */
  EClass getDecValue();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.DecValue#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.shark.lang.dd.DecValue#getValue()
   * @see #getDecValue()
   * @generated
   */
  EAttribute getDecValue_Value();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.ChrValue <em>Chr Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Chr Value</em>'.
   * @see com.shark.lang.dd.ChrValue
   * @generated
   */
  EClass getChrValue();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.ChrValue#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.shark.lang.dd.ChrValue#getValue()
   * @see #getChrValue()
   * @generated
   */
  EAttribute getChrValue_Value();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.CstValue <em>Cst Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cst Value</em>'.
   * @see com.shark.lang.dd.CstValue
   * @generated
   */
  EClass getCstValue();

  /**
   * Returns the meta object for the reference '{@link com.shark.lang.dd.CstValue#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Value</em>'.
   * @see com.shark.lang.dd.CstValue#getValue()
   * @see #getCstValue()
   * @generated
   */
  EReference getCstValue_Value();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.BoolValue <em>Bool Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool Value</em>'.
   * @see com.shark.lang.dd.BoolValue
   * @generated
   */
  EClass getBoolValue();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.BoolValue#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.shark.lang.dd.BoolValue#getValue()
   * @see #getBoolValue()
   * @generated
   */
  EAttribute getBoolValue_Value();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.UnsetValue <em>Unset Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unset Value</em>'.
   * @see com.shark.lang.dd.UnsetValue
   * @generated
   */
  EClass getUnsetValue();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.UnsetValue#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.shark.lang.dd.UnsetValue#getValue()
   * @see #getUnsetValue()
   * @generated
   */
  EAttribute getUnsetValue_Value();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.IdentifierExpression <em>Identifier Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Identifier Expression</em>'.
   * @see com.shark.lang.dd.IdentifierExpression
   * @generated
   */
  EClass getIdentifierExpression();

  /**
   * Returns the meta object for the reference '{@link com.shark.lang.dd.IdentifierExpression#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Value</em>'.
   * @see com.shark.lang.dd.IdentifierExpression#getValue()
   * @see #getIdentifierExpression()
   * @generated
   */
  EReference getIdentifierExpression_Value();

  /**
   * Returns the meta object for class '{@link com.shark.lang.dd.Comment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comment</em>'.
   * @see com.shark.lang.dd.Comment
   * @generated
   */
  EClass getComment();

  /**
   * Returns the meta object for the attribute '{@link com.shark.lang.dd.Comment#getLine <em>Line</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Line</em>'.
   * @see com.shark.lang.dd.Comment#getLine()
   * @see #getComment()
   * @generated
   */
  EAttribute getComment_Line();

  /**
   * Returns the meta object for enum '{@link com.shark.lang.dd.BinaryOperator <em>Binary Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Binary Operator</em>'.
   * @see com.shark.lang.dd.BinaryOperator
   * @generated
   */
  EEnum getBinaryOperator();

  /**
   * Returns the meta object for enum '{@link com.shark.lang.dd.UnaryOperator <em>Unary Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Unary Operator</em>'.
   * @see com.shark.lang.dd.UnaryOperator
   * @generated
   */
  EEnum getUnaryOperator();

  /**
   * Returns the meta object for enum '{@link com.shark.lang.dd.Unset <em>Unset</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Unset</em>'.
   * @see com.shark.lang.dd.Unset
   * @generated
   */
  EEnum getUnset();

  /**
   * Returns the meta object for enum '{@link com.shark.lang.dd.Boolean <em>Boolean</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Boolean</em>'.
   * @see com.shark.lang.dd.Boolean
   * @generated
   */
  EEnum getBoolean();

  /**
   * Returns the meta object for enum '{@link com.shark.lang.dd.DataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Data Type</em>'.
   * @see com.shark.lang.dd.DataType
   * @generated
   */
  EEnum getDataType();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  DdFactory getDdFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.DataModelFragmentImpl <em>Data Model Fragment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.DataModelFragmentImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getDataModelFragment()
     * @generated
     */
    EClass DATA_MODEL_FRAGMENT = eINSTANCE.getDataModelFragment();

    /**
     * The meta object literal for the '<em><b>Constants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DATA_MODEL_FRAGMENT__CONSTANTS = eINSTANCE.getDataModelFragment_Constants();

    /**
     * The meta object literal for the '<em><b>Entities</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DATA_MODEL_FRAGMENT__ENTITIES = eINSTANCE.getDataModelFragment_Entities();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DATA_MODEL_FRAGMENT__CONSTRAINTS = eINSTANCE.getDataModelFragment_Constraints();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.ConstantImpl <em>Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.ConstantImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getConstant()
     * @generated
     */
    EClass CONSTANT = eINSTANCE.getConstant();

    /**
     * The meta object literal for the '<em><b>Extra Attr Desc</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__EXTRA_ATTR_DESC = eINSTANCE.getConstant_ExtraAttrDesc();

    /**
     * The meta object literal for the '<em><b>Data Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__DATA_TYPE = eINSTANCE.getConstant_DataType();

    /**
     * The meta object literal for the '<em><b>Attribute Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__ATTRIBUTE_SIZE = eINSTANCE.getConstant_AttributeSize();

    /**
     * The meta object literal for the '<em><b>Array Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__ARRAY_SIZE = eINSTANCE.getConstant_ArraySize();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__NAME = eINSTANCE.getConstant_Name();

    /**
     * The meta object literal for the '<em><b>Default Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__DEFAULT_VALUE = eINSTANCE.getConstant_DefaultValue();

    /**
     * The meta object literal for the '<em><b>Attr Desc</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__ATTR_DESC = eINSTANCE.getConstant_AttrDesc();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.EntityImpl <em>Entity</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.EntityImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getEntity()
     * @generated
     */
    EClass ENTITY = eINSTANCE.getEntity();

    /**
     * The meta object literal for the '<em><b>Entity Desc Lines</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY__ENTITY_DESC_LINES = eINSTANCE.getEntity_EntityDescLines();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY__NAME = eINSTANCE.getEntity_Name();

    /**
     * The meta object literal for the '<em><b>Extends</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY__EXTENDS = eINSTANCE.getEntity_Extends();

    /**
     * The meta object literal for the '<em><b>Attributes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY__ATTRIBUTES = eINSTANCE.getEntity_Attributes();

    /**
     * The meta object literal for the '<em><b>Relationships</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY__RELATIONSHIPS = eINSTANCE.getEntity_Relationships();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.AttributeImpl <em>Attribute</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.AttributeImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getAttribute()
     * @generated
     */
    EClass ATTRIBUTE = eINSTANCE.getAttribute();

    /**
     * The meta object literal for the '<em><b>Extra Attr Desc</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTE__EXTRA_ATTR_DESC = eINSTANCE.getAttribute_ExtraAttrDesc();

    /**
     * The meta object literal for the '<em><b>Data Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE__DATA_TYPE = eINSTANCE.getAttribute_DataType();

    /**
     * The meta object literal for the '<em><b>Attribute Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTE__ATTRIBUTE_SIZE = eINSTANCE.getAttribute_AttributeSize();

    /**
     * The meta object literal for the '<em><b>Array Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTE__ARRAY_SIZE = eINSTANCE.getAttribute_ArraySize();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE__NAME = eINSTANCE.getAttribute_Name();

    /**
     * The meta object literal for the '<em><b>Default Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTE__DEFAULT_VALUE = eINSTANCE.getAttribute_DefaultValue();

    /**
     * The meta object literal for the '<em><b>Primary Key</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE__PRIMARY_KEY = eINSTANCE.getAttribute_PrimaryKey();

    /**
     * The meta object literal for the '<em><b>Mandatory</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE__MANDATORY = eINSTANCE.getAttribute_Mandatory();

    /**
     * The meta object literal for the '<em><b>Attr Desc</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTE__ATTR_DESC = eINSTANCE.getAttribute_AttrDesc();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.AttributeSizeImpl <em>Attribute Size</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.AttributeSizeImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getAttributeSize()
     * @generated
     */
    EClass ATTRIBUTE_SIZE = eINSTANCE.getAttributeSize();

    /**
     * The meta object literal for the '<em><b>Length</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE_SIZE__LENGTH = eINSTANCE.getAttributeSize_Length();

    /**
     * The meta object literal for the '<em><b>Precision</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE_SIZE__PRECISION = eINSTANCE.getAttributeSize_Precision();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.ArraySizeImpl <em>Array Size</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.ArraySizeImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getArraySize()
     * @generated
     */
    EClass ARRAY_SIZE = eINSTANCE.getArraySize();

    /**
     * The meta object literal for the '<em><b>Size</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARRAY_SIZE__SIZE = eINSTANCE.getArraySize_Size();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.RelationshipImpl <em>Relationship</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.RelationshipImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getRelationship()
     * @generated
     */
    EClass RELATIONSHIP = eINSTANCE.getRelationship();

    /**
     * The meta object literal for the '<em><b>Cardi1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP__CARDI1 = eINSTANCE.getRelationship_Cardi1();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RELATIONSHIP__NAME = eINSTANCE.getRelationship_Name();

    /**
     * The meta object literal for the '<em><b>Cardi2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP__CARDI2 = eINSTANCE.getRelationship_Cardi2();

    /**
     * The meta object literal for the '<em><b>Link To</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP__LINK_TO = eINSTANCE.getRelationship_LinkTo();

    /**
     * The meta object literal for the '<em><b>Rel Desc</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP__REL_DESC = eINSTANCE.getRelationship_RelDesc();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.ConstraintImpl <em>Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.ConstraintImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getConstraint()
     * @generated
     */
    EClass CONSTRAINT = eINSTANCE.getConstraint();

    /**
     * The meta object literal for the '<em><b>Chk Desc Lines</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__CHK_DESC_LINES = eINSTANCE.getConstraint_ChkDescLines();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__NAME = eINSTANCE.getConstraint_Name();

    /**
     * The meta object literal for the '<em><b>Check</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__CHECK = eINSTANCE.getConstraint_Check();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.CheckExpressionImpl <em>Check Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.CheckExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getCheckExpression()
     * @generated
     */
    EClass CHECK_EXPRESSION = eINSTANCE.getCheckExpression();

    /**
     * The meta object literal for the '<em><b>Chk Desc</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHECK_EXPRESSION__CHK_DESC = eINSTANCE.getCheckExpression_ChkDesc();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHECK_EXPRESSION__NAME = eINSTANCE.getCheckExpression_Name();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHECK_EXPRESSION__EXPR = eINSTANCE.getCheckExpression_Expr();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.SharkExpressionImpl <em>Shark Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.SharkExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getSharkExpression()
     * @generated
     */
    EClass SHARK_EXPRESSION = eINSTANCE.getSharkExpression();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.BinaryExpressionImpl <em>Binary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.BinaryExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getBinaryExpression()
     * @generated
     */
    EClass BINARY_EXPRESSION = eINSTANCE.getBinaryExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY_EXPRESSION__LEFT = eINSTANCE.getBinaryExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINARY_EXPRESSION__OP = eINSTANCE.getBinaryExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY_EXPRESSION__RIGHT = eINSTANCE.getBinaryExpression_Right();

    /**
     * The meta object literal for the '<em><b>Num Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINARY_EXPRESSION__NUM_TYPE = eINSTANCE.getBinaryExpression_NumType();

    /**
     * The meta object literal for the '<em><b>Str Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINARY_EXPRESSION__STR_TYPE = eINSTANCE.getBinaryExpression_StrType();

    /**
     * The meta object literal for the '<em><b>Date Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINARY_EXPRESSION__DATE_TYPE = eINSTANCE.getBinaryExpression_DateType();

    /**
     * The meta object literal for the '<em><b>Bool Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINARY_EXPRESSION__BOOL_TYPE = eINSTANCE.getBinaryExpression_BoolType();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.UnaryExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getUnaryExpression()
     * @generated
     */
    EClass UNARY_EXPRESSION = eINSTANCE.getUnaryExpression();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_EXPRESSION__OP = eINSTANCE.getUnaryExpression_Op();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_EXPRESSION__LEFT = eINSTANCE.getUnaryExpression_Left();

    /**
     * The meta object literal for the '<em><b>Num Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_EXPRESSION__NUM_TYPE = eINSTANCE.getUnaryExpression_NumType();

    /**
     * The meta object literal for the '<em><b>Str Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_EXPRESSION__STR_TYPE = eINSTANCE.getUnaryExpression_StrType();

    /**
     * The meta object literal for the '<em><b>Date Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_EXPRESSION__DATE_TYPE = eINSTANCE.getUnaryExpression_DateType();

    /**
     * The meta object literal for the '<em><b>Bool Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_EXPRESSION__BOOL_TYPE = eINSTANCE.getUnaryExpression_BoolType();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.AddExpressionImpl <em>Add Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.AddExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getAddExpression()
     * @generated
     */
    EClass ADD_EXPRESSION = eINSTANCE.getAddExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_EXPRESSION__LEFT = eINSTANCE.getAddExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADD_EXPRESSION__OP = eINSTANCE.getAddExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_EXPRESSION__RIGHT = eINSTANCE.getAddExpression_Right();

    /**
     * The meta object literal for the '<em><b>Add Elts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_EXPRESSION__ADD_ELTS = eINSTANCE.getAddExpression_AddElts();

    /**
     * The meta object literal for the '<em><b>Checked</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADD_EXPRESSION__CHECKED = eINSTANCE.getAddExpression_Checked();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.AddExpressionEltImpl <em>Add Expression Elt</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.AddExpressionEltImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getAddExpressionElt()
     * @generated
     */
    EClass ADD_EXPRESSION_ELT = eINSTANCE.getAddExpressionElt();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADD_EXPRESSION_ELT__OP = eINSTANCE.getAddExpressionElt_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_EXPRESSION_ELT__RIGHT = eINSTANCE.getAddExpressionElt_Right();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.MultExpressionImpl <em>Mult Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.MultExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getMultExpression()
     * @generated
     */
    EClass MULT_EXPRESSION = eINSTANCE.getMultExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULT_EXPRESSION__LEFT = eINSTANCE.getMultExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULT_EXPRESSION__OP = eINSTANCE.getMultExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULT_EXPRESSION__RIGHT = eINSTANCE.getMultExpression_Right();

    /**
     * The meta object literal for the '<em><b>Mult Elts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULT_EXPRESSION__MULT_ELTS = eINSTANCE.getMultExpression_MultElts();

    /**
     * The meta object literal for the '<em><b>Checked</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULT_EXPRESSION__CHECKED = eINSTANCE.getMultExpression_Checked();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.MultExpressionEltImpl <em>Mult Expression Elt</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.MultExpressionEltImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getMultExpressionElt()
     * @generated
     */
    EClass MULT_EXPRESSION_ELT = eINSTANCE.getMultExpressionElt();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULT_EXPRESSION_ELT__OP = eINSTANCE.getMultExpressionElt_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULT_EXPRESSION_ELT__RIGHT = eINSTANCE.getMultExpressionElt_Right();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.AndExpressionImpl <em>And Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.AndExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getAndExpression()
     * @generated
     */
    EClass AND_EXPRESSION = eINSTANCE.getAndExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPRESSION__LEFT = eINSTANCE.getAndExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AND_EXPRESSION__OP = eINSTANCE.getAndExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPRESSION__RIGHT = eINSTANCE.getAndExpression_Right();

    /**
     * The meta object literal for the '<em><b>And Elts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPRESSION__AND_ELTS = eINSTANCE.getAndExpression_AndElts();

    /**
     * The meta object literal for the '<em><b>Checked</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AND_EXPRESSION__CHECKED = eINSTANCE.getAndExpression_Checked();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.AndExpressionEltImpl <em>And Expression Elt</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.AndExpressionEltImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getAndExpressionElt()
     * @generated
     */
    EClass AND_EXPRESSION_ELT = eINSTANCE.getAndExpressionElt();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AND_EXPRESSION_ELT__OP = eINSTANCE.getAndExpressionElt_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPRESSION_ELT__RIGHT = eINSTANCE.getAndExpressionElt_Right();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.OrExpressionImpl <em>Or Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.OrExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getOrExpression()
     * @generated
     */
    EClass OR_EXPRESSION = eINSTANCE.getOrExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_EXPRESSION__LEFT = eINSTANCE.getOrExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OR_EXPRESSION__OP = eINSTANCE.getOrExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_EXPRESSION__RIGHT = eINSTANCE.getOrExpression_Right();

    /**
     * The meta object literal for the '<em><b>Or Elts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_EXPRESSION__OR_ELTS = eINSTANCE.getOrExpression_OrElts();

    /**
     * The meta object literal for the '<em><b>Checked</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OR_EXPRESSION__CHECKED = eINSTANCE.getOrExpression_Checked();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.OrExpressionEltImpl <em>Or Expression Elt</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.OrExpressionEltImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getOrExpressionElt()
     * @generated
     */
    EClass OR_EXPRESSION_ELT = eINSTANCE.getOrExpressionElt();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OR_EXPRESSION_ELT__OP = eINSTANCE.getOrExpressionElt_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_EXPRESSION_ELT__RIGHT = eINSTANCE.getOrExpressionElt_Right();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.CatExpressionImpl <em>Cat Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.CatExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getCatExpression()
     * @generated
     */
    EClass CAT_EXPRESSION = eINSTANCE.getCatExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CAT_EXPRESSION__LEFT = eINSTANCE.getCatExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CAT_EXPRESSION__OP = eINSTANCE.getCatExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CAT_EXPRESSION__RIGHT = eINSTANCE.getCatExpression_Right();

    /**
     * The meta object literal for the '<em><b>Cat Elts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CAT_EXPRESSION__CAT_ELTS = eINSTANCE.getCatExpression_CatElts();

    /**
     * The meta object literal for the '<em><b>Checked</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CAT_EXPRESSION__CHECKED = eINSTANCE.getCatExpression_Checked();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.CatExpressionEltImpl <em>Cat Expression Elt</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.CatExpressionEltImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getCatExpressionElt()
     * @generated
     */
    EClass CAT_EXPRESSION_ELT = eINSTANCE.getCatExpressionElt();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CAT_EXPRESSION_ELT__OP = eINSTANCE.getCatExpressionElt_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CAT_EXPRESSION_ELT__RIGHT = eINSTANCE.getCatExpressionElt_Right();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.ListExpressionImpl <em>List Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.ListExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getListExpression()
     * @generated
     */
    EClass LIST_EXPRESSION = eINSTANCE.getListExpression();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_EXPRESSION__OP = eINSTANCE.getListExpression_Op();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST_EXPRESSION__LEFT = eINSTANCE.getListExpression_Left();

    /**
     * The meta object literal for the '<em><b>List Elts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST_EXPRESSION__LIST_ELTS = eINSTANCE.getListExpression_ListElts();

    /**
     * The meta object literal for the '<em><b>Num Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_EXPRESSION__NUM_TYPE = eINSTANCE.getListExpression_NumType();

    /**
     * The meta object literal for the '<em><b>Str Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_EXPRESSION__STR_TYPE = eINSTANCE.getListExpression_StrType();

    /**
     * The meta object literal for the '<em><b>Date Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_EXPRESSION__DATE_TYPE = eINSTANCE.getListExpression_DateType();

    /**
     * The meta object literal for the '<em><b>Bool Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_EXPRESSION__BOOL_TYPE = eINSTANCE.getListExpression_BoolType();

    /**
     * The meta object literal for the '<em><b>Range</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_EXPRESSION__RANGE = eINSTANCE.getListExpression_Range();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.ListExpressionEltImpl <em>List Expression Elt</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.ListExpressionEltImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getListExpressionElt()
     * @generated
     */
    EClass LIST_EXPRESSION_ELT = eINSTANCE.getListExpressionElt();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_EXPRESSION_ELT__OP = eINSTANCE.getListExpressionElt_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST_EXPRESSION_ELT__RIGHT = eINSTANCE.getListExpressionElt_Right();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.TerminalExpressionImpl <em>Terminal Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.TerminalExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getTerminalExpression()
     * @generated
     */
    EClass TERMINAL_EXPRESSION = eINSTANCE.getTerminalExpression();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.LineCommentImpl <em>Line Comment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.LineCommentImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getLineComment()
     * @generated
     */
    EClass LINE_COMMENT = eINSTANCE.getLineComment();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.TrailCommentImpl <em>Trail Comment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.TrailCommentImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getTrailComment()
     * @generated
     */
    EClass TRAIL_COMMENT = eINSTANCE.getTrailComment();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.StrValueImpl <em>Str Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.StrValueImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getStrValue()
     * @generated
     */
    EClass STR_VALUE = eINSTANCE.getStrValue();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STR_VALUE__VALUE = eINSTANCE.getStrValue_Value();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.IntValueImpl <em>Int Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.IntValueImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getIntValue()
     * @generated
     */
    EClass INT_VALUE = eINSTANCE.getIntValue();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_VALUE__VALUE = eINSTANCE.getIntValue_Value();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.DecValueImpl <em>Dec Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.DecValueImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getDecValue()
     * @generated
     */
    EClass DEC_VALUE = eINSTANCE.getDecValue();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEC_VALUE__VALUE = eINSTANCE.getDecValue_Value();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.ChrValueImpl <em>Chr Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.ChrValueImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getChrValue()
     * @generated
     */
    EClass CHR_VALUE = eINSTANCE.getChrValue();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHR_VALUE__VALUE = eINSTANCE.getChrValue_Value();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.CstValueImpl <em>Cst Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.CstValueImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getCstValue()
     * @generated
     */
    EClass CST_VALUE = eINSTANCE.getCstValue();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CST_VALUE__VALUE = eINSTANCE.getCstValue_Value();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.BoolValueImpl <em>Bool Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.BoolValueImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getBoolValue()
     * @generated
     */
    EClass BOOL_VALUE = eINSTANCE.getBoolValue();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL_VALUE__VALUE = eINSTANCE.getBoolValue_Value();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.UnsetValueImpl <em>Unset Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.UnsetValueImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getUnsetValue()
     * @generated
     */
    EClass UNSET_VALUE = eINSTANCE.getUnsetValue();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNSET_VALUE__VALUE = eINSTANCE.getUnsetValue_Value();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.IdentifierExpressionImpl <em>Identifier Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.IdentifierExpressionImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getIdentifierExpression()
     * @generated
     */
    EClass IDENTIFIER_EXPRESSION = eINSTANCE.getIdentifierExpression();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IDENTIFIER_EXPRESSION__VALUE = eINSTANCE.getIdentifierExpression_Value();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.impl.CommentImpl <em>Comment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.impl.CommentImpl
     * @see com.shark.lang.dd.impl.DdPackageImpl#getComment()
     * @generated
     */
    EClass COMMENT = eINSTANCE.getComment();

    /**
     * The meta object literal for the '<em><b>Line</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMMENT__LINE = eINSTANCE.getComment_Line();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.BinaryOperator <em>Binary Operator</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.BinaryOperator
     * @see com.shark.lang.dd.impl.DdPackageImpl#getBinaryOperator()
     * @generated
     */
    EEnum BINARY_OPERATOR = eINSTANCE.getBinaryOperator();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.UnaryOperator <em>Unary Operator</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.UnaryOperator
     * @see com.shark.lang.dd.impl.DdPackageImpl#getUnaryOperator()
     * @generated
     */
    EEnum UNARY_OPERATOR = eINSTANCE.getUnaryOperator();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.Unset <em>Unset</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.Unset
     * @see com.shark.lang.dd.impl.DdPackageImpl#getUnset()
     * @generated
     */
    EEnum UNSET = eINSTANCE.getUnset();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.Boolean <em>Boolean</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.Boolean
     * @see com.shark.lang.dd.impl.DdPackageImpl#getBoolean()
     * @generated
     */
    EEnum BOOLEAN = eINSTANCE.getBoolean();

    /**
     * The meta object literal for the '{@link com.shark.lang.dd.DataType <em>Data Type</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.shark.lang.dd.DataType
     * @see com.shark.lang.dd.impl.DdPackageImpl#getDataType()
     * @generated
     */
    EEnum DATA_TYPE = eINSTANCE.getDataType();

  }

} //DdPackage
