/*
 * generated by Xtext 2.23.0
 */
parser grammar InternalDdParser;

options {
	tokenVocab=InternalDdLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@header {
package com.shark.lang.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.shark.lang.services.DdGrammarAccess;

}
@members {
	private DdGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("ExclamationMark", "'!'");
		tokenNameToValue.put("PercentSign", "'\%'");
		tokenNameToValue.put("Ampersand", "'&'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("CircumflexAccent", "'^'");
		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
		tokenNameToValue.put("HyphenMinusGreaterThanSign", "'->'");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("Or", "'or'");
		tokenNameToValue.put("Pk", "'pk'");
		tokenNameToValue.put("And", "'and'");
		tokenNameToValue.put("Chr", "'chr'");
		tokenNameToValue.put("Dec", "'dec'");
		tokenNameToValue.put("Int", "'int'");
		tokenNameToValue.put("Len", "'len'");
		tokenNameToValue.put("Not", "'not'");
		tokenNameToValue.put("Str", "'str'");
		tokenNameToValue.put("HalfwidthHangulFillerHalfwidthHangulFillerHalfwidthHangulFiller", "'\uFFA0\uFFA0\uFFA0'");
		tokenNameToValue.put("Bits", "'bits'");
		tokenNameToValue.put("Bool", "'bool'");
		tokenNameToValue.put("Date", "'date'");
		tokenNameToValue.put("Like", "'like'");
		tokenNameToValue.put("Stxt", "'stxt'");
		tokenNameToValue.put("Time", "'time'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("False", "'false'");
		tokenNameToValue.put("Round", "'round'");
		tokenNameToValue.put("Stamp", "'stamp'");
		tokenNameToValue.put("Unset", "'unset'");
	}

	public void setGrammarAccess(DdGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleDataModelFragment
entryRuleDataModelFragment
:
{ before(grammarAccess.getDataModelFragmentRule()); }
	 ruleDataModelFragment
{ after(grammarAccess.getDataModelFragmentRule()); } 
	 EOF 
;

// Rule DataModelFragment
ruleDataModelFragment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataModelFragmentAccess().getGroup()); }
		(rule__DataModelFragment__Group__0)
		{ after(grammarAccess.getDataModelFragmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getGroup()); }
		(rule__Constant__Group__0)
		{ after(grammarAccess.getConstantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeSize
entryRuleAttributeSize
:
{ before(grammarAccess.getAttributeSizeRule()); }
	 ruleAttributeSize
{ after(grammarAccess.getAttributeSizeRule()); } 
	 EOF 
;

// Rule AttributeSize
ruleAttributeSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeSizeAccess().getGroup()); }
		(rule__AttributeSize__Group__0)
		{ after(grammarAccess.getAttributeSizeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArraySize
entryRuleArraySize
:
{ before(grammarAccess.getArraySizeRule()); }
	 ruleArraySize
{ after(grammarAccess.getArraySizeRule()); } 
	 EOF 
;

// Rule ArraySize
ruleArraySize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArraySizeAccess().getGroup()); }
		(rule__ArraySize__Group__0)
		{ after(grammarAccess.getArraySizeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationship
entryRuleRelationship
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipAccess().getGroup()); }
		(rule__Relationship__Group__0)
		{ after(grammarAccess.getRelationshipAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup()); }
		(rule__Constraint__Group__0)
		{ after(grammarAccess.getConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckExpression
entryRuleCheckExpression
:
{ before(grammarAccess.getCheckExpressionRule()); }
	 ruleCheckExpression
{ after(grammarAccess.getCheckExpressionRule()); } 
	 EOF 
;

// Rule CheckExpression
ruleCheckExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckExpressionAccess().getGroup()); }
		(rule__CheckExpression__Group__0)
		{ after(grammarAccess.getCheckExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSharkExpression
entryRuleSharkExpression
:
{ before(grammarAccess.getSharkExpressionRule()); }
	 ruleSharkExpression
{ after(grammarAccess.getSharkExpressionRule()); } 
	 EOF 
;

// Rule SharkExpression
ruleSharkExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSharkExpressionAccess().getAlternatives()); }
		(rule__SharkExpression__Alternatives)
		{ after(grammarAccess.getSharkExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression
:
{ before(grammarAccess.getBinaryExpressionRule()); }
	 ruleBinaryExpression
{ after(grammarAccess.getBinaryExpressionRule()); } 
	 EOF 
;

// Rule BinaryExpression
ruleBinaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getGroup()); }
		(rule__BinaryExpression__Group__0)
		{ after(grammarAccess.getBinaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
		(rule__UnaryExpression__Group__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExpression
entryRuleAddExpression
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
		(rule__AddExpression__Group__0)
		{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExpressionElt
entryRuleAddExpressionElt
:
{ before(grammarAccess.getAddExpressionEltRule()); }
	 ruleAddExpressionElt
{ after(grammarAccess.getAddExpressionEltRule()); } 
	 EOF 
;

// Rule AddExpressionElt
ruleAddExpressionElt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExpressionEltAccess().getGroup()); }
		(rule__AddExpressionElt__Group__0)
		{ after(grammarAccess.getAddExpressionEltAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultExpression
entryRuleMultExpression
:
{ before(grammarAccess.getMultExpressionRule()); }
	 ruleMultExpression
{ after(grammarAccess.getMultExpressionRule()); } 
	 EOF 
;

// Rule MultExpression
ruleMultExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultExpressionAccess().getGroup()); }
		(rule__MultExpression__Group__0)
		{ after(grammarAccess.getMultExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultExpressionElt
entryRuleMultExpressionElt
:
{ before(grammarAccess.getMultExpressionEltRule()); }
	 ruleMultExpressionElt
{ after(grammarAccess.getMultExpressionEltRule()); } 
	 EOF 
;

// Rule MultExpressionElt
ruleMultExpressionElt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultExpressionEltAccess().getGroup()); }
		(rule__MultExpressionElt__Group__0)
		{ after(grammarAccess.getMultExpressionEltAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpressionElt
entryRuleAndExpressionElt
:
{ before(grammarAccess.getAndExpressionEltRule()); }
	 ruleAndExpressionElt
{ after(grammarAccess.getAndExpressionEltRule()); } 
	 EOF 
;

// Rule AndExpressionElt
ruleAndExpressionElt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionEltAccess().getGroup()); }
		(rule__AndExpressionElt__Group__0)
		{ after(grammarAccess.getAndExpressionEltAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpressionElt
entryRuleOrExpressionElt
:
{ before(grammarAccess.getOrExpressionEltRule()); }
	 ruleOrExpressionElt
{ after(grammarAccess.getOrExpressionEltRule()); } 
	 EOF 
;

// Rule OrExpressionElt
ruleOrExpressionElt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionEltAccess().getGroup()); }
		(rule__OrExpressionElt__Group__0)
		{ after(grammarAccess.getOrExpressionEltAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCatExpression
entryRuleCatExpression
:
{ before(grammarAccess.getCatExpressionRule()); }
	 ruleCatExpression
{ after(grammarAccess.getCatExpressionRule()); } 
	 EOF 
;

// Rule CatExpression
ruleCatExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCatExpressionAccess().getGroup()); }
		(rule__CatExpression__Group__0)
		{ after(grammarAccess.getCatExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCatExpressionElt
entryRuleCatExpressionElt
:
{ before(grammarAccess.getCatExpressionEltRule()); }
	 ruleCatExpressionElt
{ after(grammarAccess.getCatExpressionEltRule()); } 
	 EOF 
;

// Rule CatExpressionElt
ruleCatExpressionElt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCatExpressionEltAccess().getGroup()); }
		(rule__CatExpressionElt__Group__0)
		{ after(grammarAccess.getCatExpressionEltAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListExpression
entryRuleListExpression
:
{ before(grammarAccess.getListExpressionRule()); }
	 ruleListExpression
{ after(grammarAccess.getListExpressionRule()); } 
	 EOF 
;

// Rule ListExpression
ruleListExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListExpressionAccess().getGroup()); }
		(rule__ListExpression__Group__0)
		{ after(grammarAccess.getListExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListExpressionElt
entryRuleListExpressionElt
:
{ before(grammarAccess.getListExpressionEltRule()); }
	 ruleListExpressionElt
{ after(grammarAccess.getListExpressionEltRule()); } 
	 EOF 
;

// Rule ListExpressionElt
ruleListExpressionElt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListExpressionEltAccess().getGroup()); }
		(rule__ListExpressionElt__Group__0)
		{ after(grammarAccess.getListExpressionEltAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeExpression
entryRuleRangeExpression
:
{ before(grammarAccess.getRangeExpressionRule()); }
	 ruleRangeExpression
{ after(grammarAccess.getRangeExpressionRule()); } 
	 EOF 
;

// Rule RangeExpression
ruleRangeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getAlternatives()); }
		(rule__RangeExpression__Alternatives)
		{ after(grammarAccess.getRangeExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
		(rule__TerminalExpression__Alternatives)
		{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifierExpression
entryRuleIdentifierExpression
:
{ before(grammarAccess.getIdentifierExpressionRule()); }
	 ruleIdentifierExpression
{ after(grammarAccess.getIdentifierExpressionRule()); } 
	 EOF 
;

// Rule IdentifierExpression
ruleIdentifierExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierExpressionAccess().getGroup()); }
		(rule__IdentifierExpression__Group__0)
		{ after(grammarAccess.getIdentifierExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLineComment
entryRuleLineComment
:
{ before(grammarAccess.getLineCommentRule()); }
	 ruleLineComment
{ after(grammarAccess.getLineCommentRule()); } 
	 EOF 
;

// Rule LineComment
ruleLineComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLineCommentAccess().getGroup()); }
		(rule__LineComment__Group__0)
		{ after(grammarAccess.getLineCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrailComment
entryRuleTrailComment
:
{ before(grammarAccess.getTrailCommentRule()); }
	 ruleTrailComment
{ after(grammarAccess.getTrailCommentRule()); } 
	 EOF 
;

// Rule TrailComment
ruleTrailComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrailCommentAccess().getGroup()); }
		(rule__TrailComment__Group__0)
		{ after(grammarAccess.getTrailCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BinaryOperator
ruleBinaryOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
		(rule__BinaryOperator__Alternatives)
		{ after(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule UnaryOperator
ruleUnaryOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Unset
ruleUnset
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsetAccess().getUnsetEnumLiteralDeclaration()); }
		(Unset)
		{ after(grammarAccess.getUnsetAccess().getUnsetEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Boolean
ruleBoolean
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getAlternatives()); }
		(rule__Boolean__Alternatives)
		{ after(grammarAccess.getBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataType
ruleDataType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharkExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSharkExpressionAccess().getRangeExpressionParserRuleCall_0()); }
		(ruleRangeExpression)
		{ after(grammarAccess.getSharkExpressionAccess().getRangeExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSharkExpressionAccess().getAddExpressionParserRuleCall_1()); }
		(ruleAddExpression)
		{ after(grammarAccess.getSharkExpressionAccess().getAddExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSharkExpressionAccess().getMultExpressionParserRuleCall_2()); }
		(ruleMultExpression)
		{ after(grammarAccess.getSharkExpressionAccess().getMultExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSharkExpressionAccess().getAndExpressionParserRuleCall_3()); }
		(ruleAndExpression)
		{ after(grammarAccess.getSharkExpressionAccess().getAndExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSharkExpressionAccess().getOrExpressionParserRuleCall_4()); }
		(ruleOrExpression)
		{ after(grammarAccess.getSharkExpressionAccess().getOrExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getSharkExpressionAccess().getCatExpressionParserRuleCall_5()); }
		(ruleCatExpression)
		{ after(grammarAccess.getSharkExpressionAccess().getCatExpressionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getSharkExpressionAccess().getListExpressionParserRuleCall_6()); }
		(ruleListExpression)
		{ after(grammarAccess.getSharkExpressionAccess().getListExpressionParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getSharkExpressionAccess().getBinaryExpressionParserRuleCall_7()); }
		ruleBinaryExpression
		{ after(grammarAccess.getSharkExpressionAccess().getBinaryExpressionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getSharkExpressionAccess().getUnaryExpressionParserRuleCall_8()); }
		ruleUnaryExpression
		{ after(grammarAccess.getSharkExpressionAccess().getUnaryExpressionParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getSharkExpressionAccess().getTerminalExpressionParserRuleCall_9()); }
		ruleTerminalExpression
		{ after(grammarAccess.getSharkExpressionAccess().getTerminalExpressionParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getSharkExpressionAccess().getIdentifierExpressionParserRuleCall_10()); }
		ruleIdentifierExpression
		{ after(grammarAccess.getSharkExpressionAccess().getIdentifierExpressionParserRuleCall_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OpAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getOpPlusSignKeyword_2_0_0()); }
		PlusSign
		{ after(grammarAccess.getAddExpressionAccess().getOpPlusSignKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddExpressionAccess().getOpHyphenMinusKeyword_2_0_1()); }
		HyphenMinus
		{ after(grammarAccess.getAddExpressionAccess().getOpHyphenMinusKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpressionElt__OpAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionEltAccess().getOpPlusSignKeyword_0_0_0()); }
		PlusSign
		{ after(grammarAccess.getAddExpressionEltAccess().getOpPlusSignKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddExpressionEltAccess().getOpHyphenMinusKeyword_0_0_1()); }
		HyphenMinus
		{ after(grammarAccess.getAddExpressionEltAccess().getOpHyphenMinusKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getGroup_0()); }
		(rule__RangeExpression__Group_0__0)
		{ after(grammarAccess.getRangeExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeExpressionAccess().getGroup_1()); }
		(rule__RangeExpression__Group_1__0)
		{ after(grammarAccess.getRangeExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
		(rule__TerminalExpression__Group_0__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
		(rule__TerminalExpression__Group_1__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
		(rule__TerminalExpression__Group_2__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
		(rule__TerminalExpression__Group_3__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
		(rule__TerminalExpression__Group_4__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_5()); }
		(rule__TerminalExpression__Group_5__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_6()); }
		(rule__TerminalExpression__Group_6__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpOrEnumLiteralDeclaration_0()); }
		(Or)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpOrEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpAndEnumLiteralDeclaration_1()); }
		(And)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpAndEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpAddEnumLiteralDeclaration_2()); }
		(PlusSign)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpAddEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpMinEnumLiteralDeclaration_3()); }
		(HyphenMinus)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpMinEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpMultEnumLiteralDeclaration_4()); }
		(Asterisk)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpMultEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpDivEnumLiteralDeclaration_5()); }
		(Solidus)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpDivEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpModEnumLiteralDeclaration_6()); }
		(PercentSign)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpModEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpEqEnumLiteralDeclaration_7()); }
		(EqualsSignEqualsSign)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpEqEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpGtEnumLiteralDeclaration_8()); }
		(GreaterThanSign)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpGtEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpLtEnumLiteralDeclaration_9()); }
		(LessThanSign)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpLtEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpLteEnumLiteralDeclaration_10()); }
		(LessThanSignEqualsSign)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpLteEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpGteEnumLiteralDeclaration_11()); }
		(GreaterThanSignEqualsSign)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpGteEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpPowEnumLiteralDeclaration_12()); }
		(CircumflexAccent)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpPowEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpLikeEnumLiteralDeclaration_13()); }
		(Like)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpLikeEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpDifEnumLiteralDeclaration_14()); }
		(ExclamationMarkEqualsSign)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpDifEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpCatEnumLiteralDeclaration_15()); }
		(Ampersand)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpCatEnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpInEnumLiteralDeclaration_16()); }
		(In)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpInEnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpStxtEnumLiteralDeclaration_17()); }
		(Stxt)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpStxtEnumLiteralDeclaration_17()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOpRoundEnumLiteralDeclaration_18()); }
		(Round)
		{ after(grammarAccess.getBinaryOperatorAccess().getOpRoundEnumLiteralDeclaration_18()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getOpNotEnumLiteralDeclaration_0()); }
		(Not)
		{ after(grammarAccess.getUnaryOperatorAccess().getOpNotEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getOpNegEnumLiteralDeclaration_1()); }
		(HyphenMinus)
		{ after(grammarAccess.getUnaryOperatorAccess().getOpNegEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getStrCastEnumLiteralDeclaration_2()); }
		(Str)
		{ after(grammarAccess.getUnaryOperatorAccess().getStrCastEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getIntCastEnumLiteralDeclaration_3()); }
		(Int)
		{ after(grammarAccess.getUnaryOperatorAccess().getIntCastEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getDecCastEnumLiteralDeclaration_4()); }
		(Dec)
		{ after(grammarAccess.getUnaryOperatorAccess().getDecCastEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getDateCastEnumLiteralDeclaration_5()); }
		(Date)
		{ after(grammarAccess.getUnaryOperatorAccess().getDateCastEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getTimeCastEnumLiteralDeclaration_6()); }
		(Time)
		{ after(grammarAccess.getUnaryOperatorAccess().getTimeCastEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getOpLenEnumLiteralDeclaration_7()); }
		(Len)
		{ after(grammarAccess.getUnaryOperatorAccess().getOpLenEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getStampCastEnumLiteralDeclaration_8()); }
		(Stamp)
		{ after(grammarAccess.getUnaryOperatorAccess().getStampCastEnumLiteralDeclaration_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getTrueCstEnumLiteralDeclaration_0()); }
		(True)
		{ after(grammarAccess.getBooleanAccess().getTrueCstEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanAccess().getFalseCstEnumLiteralDeclaration_1()); }
		(False)
		{ after(grammarAccess.getBooleanAccess().getFalseCstEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getStrEnumLiteralDeclaration_0()); }
		(Str)
		{ after(grammarAccess.getDataTypeAccess().getStrEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDecEnumLiteralDeclaration_1()); }
		(Dec)
		{ after(grammarAccess.getDataTypeAccess().getDecEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDateEnumLiteralDeclaration_2()); }
		(Date)
		{ after(grammarAccess.getDataTypeAccess().getDateEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getTimeEnumLiteralDeclaration_3()); }
		(Time)
		{ after(grammarAccess.getDataTypeAccess().getTimeEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getChrEnumLiteralDeclaration_4()); }
		(Chr)
		{ after(grammarAccess.getDataTypeAccess().getChrEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_5()); }
		(Int)
		{ after(grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getStampEnumLiteralDeclaration_6()); }
		(Stamp)
		{ after(grammarAccess.getDataTypeAccess().getStampEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getBitsEnumLiteralDeclaration_7()); }
		(Bits)
		{ after(grammarAccess.getDataTypeAccess().getBitsEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getBoolEnumLiteralDeclaration_8()); }
		(Bool)
		{ after(grammarAccess.getDataTypeAccess().getBoolEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getUnsetEnumLiteralDeclaration_9()); }
		(HalfwidthHangulFillerHalfwidthHangulFillerHalfwidthHangulFiller)
		{ after(grammarAccess.getDataTypeAccess().getUnsetEnumLiteralDeclaration_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModelFragment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModelFragment__Group__0__Impl
	rule__DataModelFragment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModelFragment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelFragmentAccess().getConstantsAssignment_0()); }
	(rule__DataModelFragment__ConstantsAssignment_0)*
	{ after(grammarAccess.getDataModelFragmentAccess().getConstantsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModelFragment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModelFragment__Group__1__Impl
	rule__DataModelFragment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModelFragment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelFragmentAccess().getEntitiesAssignment_1()); }
	(rule__DataModelFragment__EntitiesAssignment_1)*
	{ after(grammarAccess.getDataModelFragmentAccess().getEntitiesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModelFragment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModelFragment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModelFragment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelFragmentAccess().getConstraintsAssignment_2()); }
	(rule__DataModelFragment__ConstraintsAssignment_2)*
	{ after(grammarAccess.getDataModelFragmentAccess().getConstraintsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getExtraAttrDescAssignment_0()); }
	(rule__Constant__ExtraAttrDescAssignment_0)*
	{ after(grammarAccess.getConstantAccess().getExtraAttrDescAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getDataTypeAssignment_1()); }
	(rule__Constant__DataTypeAssignment_1)
	{ after(grammarAccess.getConstantAccess().getDataTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__2__Impl
	rule__Constant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getAttributeSizeAssignment_2()); }
	(rule__Constant__AttributeSizeAssignment_2)?
	{ after(grammarAccess.getConstantAccess().getAttributeSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__3__Impl
	rule__Constant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getArraySizeAssignment_3()); }
	(rule__Constant__ArraySizeAssignment_3)?
	{ after(grammarAccess.getConstantAccess().getArraySizeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__4__Impl
	rule__Constant__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getNameAssignment_4()); }
	(rule__Constant__NameAssignment_4)
	{ after(grammarAccess.getConstantAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__5__Impl
	rule__Constant__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getGroup_5()); }
	(rule__Constant__Group_5__0)
	{ after(grammarAccess.getConstantAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__6__Impl
	rule__Constant__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getAttrDescAssignment_6()); }
	(rule__Constant__AttrDescAssignment_6)
	{ after(grammarAccess.getConstantAccess().getAttrDescAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getEOLTerminalRuleCall_7()); }
	RULE_EOL
	{ after(grammarAccess.getConstantAccess().getEOLTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_5__0__Impl
	rule__Constant__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getEqualsSignKeyword_5_0()); }
	EqualsSign
	{ after(grammarAccess.getConstantAccess().getEqualsSignKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getDefaultValueAssignment_5_1()); }
	(rule__Constant__DefaultValueAssignment_5_1)
	{ after(grammarAccess.getConstantAccess().getDefaultValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEntityAccess().getEntityDescLinesAssignment_0()); }
		(rule__Entity__EntityDescLinesAssignment_0)
		{ after(grammarAccess.getEntityAccess().getEntityDescLinesAssignment_0()); }
	)
	(
		{ before(grammarAccess.getEntityAccess().getEntityDescLinesAssignment_0()); }
		(rule__Entity__EntityDescLinesAssignment_0)*
		{ after(grammarAccess.getEntityAccess().getEntityDescLinesAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getEntityAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getEntityAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEntityAccess().getAttributesAssignment_5()); }
		(rule__Entity__AttributesAssignment_5)
		{ after(grammarAccess.getEntityAccess().getAttributesAssignment_5()); }
	)
	(
		{ before(grammarAccess.getEntityAccess().getAttributesAssignment_5()); }
		(rule__Entity__AttributesAssignment_5)*
		{ after(grammarAccess.getEntityAccess().getAttributesAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__6__Impl
	rule__Entity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRelationshipsAssignment_6()); }
	(rule__Entity__RelationshipsAssignment_6)*
	{ after(grammarAccess.getEntityAccess().getRelationshipsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getENDTerminalRuleCall_7()); }
	RULE_END
	{ after(grammarAccess.getEntityAccess().getENDTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getHyphenMinusGreaterThanSignKeyword_2_0()); }
	HyphenMinusGreaterThanSign
	{ after(grammarAccess.getEntityAccess().getHyphenMinusGreaterThanSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getExtendsAssignment_2_1()); }
	(rule__Entity__ExtendsAssignment_2_1)
	{ after(grammarAccess.getEntityAccess().getExtendsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getExtraAttrDescAssignment_0()); }
	(rule__Attribute__ExtraAttrDescAssignment_0)*
	{ after(grammarAccess.getAttributeAccess().getExtraAttrDescAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getDataTypeAssignment_1()); }
	(rule__Attribute__DataTypeAssignment_1)
	{ after(grammarAccess.getAttributeAccess().getDataTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttributeSizeAssignment_2()); }
	(rule__Attribute__AttributeSizeAssignment_2)?
	{ after(grammarAccess.getAttributeAccess().getAttributeSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getArraySizeAssignment_3()); }
	(rule__Attribute__ArraySizeAssignment_3)?
	{ after(grammarAccess.getAttributeAccess().getArraySizeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__4__Impl
	rule__Attribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_4()); }
	(rule__Attribute__NameAssignment_4)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__5__Impl
	rule__Attribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_5()); }
	(rule__Attribute__Group_5__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__6__Impl
	rule__Attribute__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getPrimaryKeyAssignment_6()); }
	(rule__Attribute__PrimaryKeyAssignment_6)?
	{ after(grammarAccess.getAttributeAccess().getPrimaryKeyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__7__Impl
	rule__Attribute__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getMandatoryAssignment_7()); }
	(rule__Attribute__MandatoryAssignment_7)?
	{ after(grammarAccess.getAttributeAccess().getMandatoryAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__8__Impl
	rule__Attribute__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttrDescAssignment_8()); }
	(rule__Attribute__AttrDescAssignment_8)
	{ after(grammarAccess.getAttributeAccess().getAttrDescAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getEOLTerminalRuleCall_9()); }
	RULE_EOL
	{ after(grammarAccess.getAttributeAccess().getEOLTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_5__0__Impl
	rule__Attribute__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_5_0()); }
	EqualsSign
	{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getDefaultValueAssignment_5_1()); }
	(rule__Attribute__DefaultValueAssignment_5_1)
	{ after(grammarAccess.getAttributeAccess().getDefaultValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSize__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSize__Group__0__Impl
	rule__AttributeSize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSizeAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getAttributeSizeAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSize__Group__1__Impl
	rule__AttributeSize__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSizeAccess().getLengthAssignment_1()); }
	(rule__AttributeSize__LengthAssignment_1)
	{ after(grammarAccess.getAttributeSizeAccess().getLengthAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSize__Group__2__Impl
	rule__AttributeSize__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSizeAccess().getGroup_2()); }
	(rule__AttributeSize__Group_2__0)?
	{ after(grammarAccess.getAttributeSizeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSize__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSizeAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getAttributeSizeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSize__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSize__Group_2__0__Impl
	rule__AttributeSize__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSizeAccess().getCommaKeyword_2_0()); }
	Comma
	{ after(grammarAccess.getAttributeSizeAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSize__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSizeAccess().getPrecisionAssignment_2_1()); }
	(rule__AttributeSize__PrecisionAssignment_2_1)
	{ after(grammarAccess.getAttributeSizeAccess().getPrecisionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySize__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySize__Group__0__Impl
	rule__ArraySize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySizeAccess().getLeftSquareBracketKeyword_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getArraySizeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySize__Group__1__Impl
	rule__ArraySize__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySizeAccess().getSizeAssignment_1()); }
	(rule__ArraySize__SizeAssignment_1)
	{ after(grammarAccess.getArraySizeAccess().getSizeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySize__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySizeAccess().getRightSquareBracketKeyword_2()); }
	RightSquareBracket
	{ after(grammarAccess.getArraySizeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__0__Impl
	rule__Relationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getCardi1Assignment_0()); }
	(rule__Relationship__Cardi1Assignment_0)
	{ after(grammarAccess.getRelationshipAccess().getCardi1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__1__Impl
	rule__Relationship__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getNameAssignment_1()); }
	(rule__Relationship__NameAssignment_1)
	{ after(grammarAccess.getRelationshipAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__2__Impl
	rule__Relationship__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getCardi2Assignment_2()); }
	(rule__Relationship__Cardi2Assignment_2)
	{ after(grammarAccess.getRelationshipAccess().getCardi2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__3__Impl
	rule__Relationship__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getLinkToAssignment_3()); }
	(rule__Relationship__LinkToAssignment_3)
	{ after(grammarAccess.getRelationshipAccess().getLinkToAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__4__Impl
	rule__Relationship__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getRelDescAssignment_4()); }
	(rule__Relationship__RelDescAssignment_4)
	{ after(grammarAccess.getRelationshipAccess().getRelDescAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getEOLTerminalRuleCall_5()); }
	RULE_EOL
	{ after(grammarAccess.getRelationshipAccess().getEOLTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConstraintAccess().getChkDescLinesAssignment_0()); }
		(rule__Constraint__ChkDescLinesAssignment_0)
		{ after(grammarAccess.getConstraintAccess().getChkDescLinesAssignment_0()); }
	)
	(
		{ before(grammarAccess.getConstraintAccess().getChkDescLinesAssignment_0()); }
		(rule__Constraint__ChkDescLinesAssignment_0)*
		{ after(grammarAccess.getConstraintAccess().getChkDescLinesAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
	(rule__Constraint__NameAssignment_1)
	{ after(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getConstraintAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__3__Impl
	rule__Constraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getConstraintAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__4__Impl
	rule__Constraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConstraintAccess().getCheckAssignment_4()); }
		(rule__Constraint__CheckAssignment_4)
		{ after(grammarAccess.getConstraintAccess().getCheckAssignment_4()); }
	)
	(
		{ before(grammarAccess.getConstraintAccess().getCheckAssignment_4()); }
		(rule__Constraint__CheckAssignment_4)*
		{ after(grammarAccess.getConstraintAccess().getCheckAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getConstraintAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckExpression__Group__0__Impl
	rule__CheckExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCheckExpressionAccess().getChkDescAssignment_0()); }
		(rule__CheckExpression__ChkDescAssignment_0)
		{ after(grammarAccess.getCheckExpressionAccess().getChkDescAssignment_0()); }
	)
	(
		{ before(grammarAccess.getCheckExpressionAccess().getChkDescAssignment_0()); }
		(rule__CheckExpression__ChkDescAssignment_0)*
		{ after(grammarAccess.getCheckExpressionAccess().getChkDescAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckExpression__Group__1__Impl
	rule__CheckExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckExpressionAccess().getNameAssignment_1()); }
	(rule__CheckExpression__NameAssignment_1)
	{ after(grammarAccess.getCheckExpressionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckExpression__Group__2__Impl
	rule__CheckExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckExpressionAccess().getExprAssignment_2()); }
	(rule__CheckExpression__ExprAssignment_2)
	{ after(grammarAccess.getCheckExpressionAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckExpressionAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getCheckExpressionAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group__0__Impl
	rule__BinaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getBinaryExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group__1__Impl
	rule__BinaryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getLeftAssignment_1()); }
	(rule__BinaryExpression__LeftAssignment_1)
	{ after(grammarAccess.getBinaryExpressionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group__2__Impl
	rule__BinaryExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getOpAssignment_2()); }
	(rule__BinaryExpression__OpAssignment_2)
	{ after(grammarAccess.getBinaryExpressionAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group__3__Impl
	rule__BinaryExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getRightAssignment_3()); }
	(rule__BinaryExpression__RightAssignment_3)
	{ after(grammarAccess.getBinaryExpressionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group__4__Impl
	rule__BinaryExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getBinaryExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getGroup_5()); }
	(rule__BinaryExpression__Group_5__0)?
	{ after(grammarAccess.getBinaryExpressionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_5__0__Impl
	rule__BinaryExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getNumTypeAssignment_5_0()); }
	(rule__BinaryExpression__NumTypeAssignment_5_0)
	{ after(grammarAccess.getBinaryExpressionAccess().getNumTypeAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_5__1__Impl
	rule__BinaryExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getStrTypeAssignment_5_1()); }
	(rule__BinaryExpression__StrTypeAssignment_5_1)
	{ after(grammarAccess.getBinaryExpressionAccess().getStrTypeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_5__2__Impl
	rule__BinaryExpression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getDateTypeAssignment_5_2()); }
	(rule__BinaryExpression__DateTypeAssignment_5_2)
	{ after(grammarAccess.getBinaryExpressionAccess().getDateTypeAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getBoolTypeAssignment_5_3()); }
	(rule__BinaryExpression__BoolTypeAssignment_5_3)
	{ after(grammarAccess.getBinaryExpressionAccess().getBoolTypeAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0()); }
	(rule__UnaryExpression__OpAssignment_0)
	{ after(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__1__Impl
	rule__UnaryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getUnaryExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__2__Impl
	rule__UnaryExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getLeftAssignment_2()); }
	(rule__UnaryExpression__LeftAssignment_2)
	{ after(grammarAccess.getUnaryExpressionAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__3__Impl
	rule__UnaryExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getUnaryExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getGroup_4()); }
	(rule__UnaryExpression__Group_4__0)?
	{ after(grammarAccess.getUnaryExpressionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_4__0__Impl
	rule__UnaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getNumTypeAssignment_4_0()); }
	(rule__UnaryExpression__NumTypeAssignment_4_0)
	{ after(grammarAccess.getUnaryExpressionAccess().getNumTypeAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_4__1__Impl
	rule__UnaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getStrTypeAssignment_4_1()); }
	(rule__UnaryExpression__StrTypeAssignment_4_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getStrTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_4__2__Impl
	rule__UnaryExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getDateTypeAssignment_4_2()); }
	(rule__UnaryExpression__DateTypeAssignment_4_2)
	{ after(grammarAccess.getUnaryExpressionAccess().getDateTypeAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getBoolTypeAssignment_4_3()); }
	(rule__UnaryExpression__BoolTypeAssignment_4_3)
	{ after(grammarAccess.getUnaryExpressionAccess().getBoolTypeAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getAddExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__1__Impl
	rule__AddExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getLeftAssignment_1()); }
	(rule__AddExpression__LeftAssignment_1)
	{ after(grammarAccess.getAddExpressionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__2__Impl
	rule__AddExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getOpAssignment_2()); }
	(rule__AddExpression__OpAssignment_2)
	{ after(grammarAccess.getAddExpressionAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__3__Impl
	rule__AddExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getRightAssignment_3()); }
	(rule__AddExpression__RightAssignment_3)
	{ after(grammarAccess.getAddExpressionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__4__Impl
	rule__AddExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAddExpressionAccess().getAddEltsAssignment_4()); }
		(rule__AddExpression__AddEltsAssignment_4)
		{ after(grammarAccess.getAddExpressionAccess().getAddEltsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getAddExpressionAccess().getAddEltsAssignment_4()); }
		(rule__AddExpression__AddEltsAssignment_4)*
		{ after(grammarAccess.getAddExpressionAccess().getAddEltsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__5__Impl
	rule__AddExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getAddExpressionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getCheckedAssignment_6()); }
	(rule__AddExpression__CheckedAssignment_6)?
	{ after(grammarAccess.getAddExpressionAccess().getCheckedAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpressionElt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpressionElt__Group__0__Impl
	rule__AddExpressionElt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpressionElt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionEltAccess().getOpAssignment_0()); }
	(rule__AddExpressionElt__OpAssignment_0)
	{ after(grammarAccess.getAddExpressionEltAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpressionElt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpressionElt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpressionElt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionEltAccess().getRightAssignment_1()); }
	(rule__AddExpressionElt__RightAssignment_1)
	{ after(grammarAccess.getAddExpressionEltAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group__0__Impl
	rule__MultExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getMultExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group__1__Impl
	rule__MultExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getLeftAssignment_1()); }
	(rule__MultExpression__LeftAssignment_1)
	{ after(grammarAccess.getMultExpressionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group__2__Impl
	rule__MultExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getOpAssignment_2()); }
	(rule__MultExpression__OpAssignment_2)
	{ after(grammarAccess.getMultExpressionAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group__3__Impl
	rule__MultExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getRightAssignment_3()); }
	(rule__MultExpression__RightAssignment_3)
	{ after(grammarAccess.getMultExpressionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group__4__Impl
	rule__MultExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMultExpressionAccess().getMultEltsAssignment_4()); }
		(rule__MultExpression__MultEltsAssignment_4)
		{ after(grammarAccess.getMultExpressionAccess().getMultEltsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getMultExpressionAccess().getMultEltsAssignment_4()); }
		(rule__MultExpression__MultEltsAssignment_4)*
		{ after(grammarAccess.getMultExpressionAccess().getMultEltsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group__5__Impl
	rule__MultExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getMultExpressionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getCheckedAssignment_6()); }
	(rule__MultExpression__CheckedAssignment_6)?
	{ after(grammarAccess.getMultExpressionAccess().getCheckedAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpressionElt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpressionElt__Group__0__Impl
	rule__MultExpressionElt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpressionElt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionEltAccess().getOpAssignment_0()); }
	(rule__MultExpressionElt__OpAssignment_0)
	{ after(grammarAccess.getMultExpressionEltAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpressionElt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpressionElt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpressionElt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionEltAccess().getRightAssignment_1()); }
	(rule__MultExpressionElt__RightAssignment_1)
	{ after(grammarAccess.getMultExpressionEltAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getAndExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
	rule__AndExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getLeftAssignment_1()); }
	(rule__AndExpression__LeftAssignment_1)
	{ after(grammarAccess.getAndExpressionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__2__Impl
	rule__AndExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOpAssignment_2()); }
	(rule__AndExpression__OpAssignment_2)
	{ after(grammarAccess.getAndExpressionAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__3__Impl
	rule__AndExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_3()); }
	(rule__AndExpression__RightAssignment_3)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__4__Impl
	rule__AndExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAndExpressionAccess().getAndEltsAssignment_4()); }
		(rule__AndExpression__AndEltsAssignment_4)
		{ after(grammarAccess.getAndExpressionAccess().getAndEltsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getAndExpressionAccess().getAndEltsAssignment_4()); }
		(rule__AndExpression__AndEltsAssignment_4)*
		{ after(grammarAccess.getAndExpressionAccess().getAndEltsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__5__Impl
	rule__AndExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getAndExpressionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getCheckedAssignment_6()); }
	(rule__AndExpression__CheckedAssignment_6)?
	{ after(grammarAccess.getAndExpressionAccess().getCheckedAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpressionElt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpressionElt__Group__0__Impl
	rule__AndExpressionElt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionElt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionEltAccess().getOpAssignment_0()); }
	(rule__AndExpressionElt__OpAssignment_0)
	{ after(grammarAccess.getAndExpressionEltAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionElt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpressionElt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionElt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionEltAccess().getRightAssignment_1()); }
	(rule__AndExpressionElt__RightAssignment_1)
	{ after(grammarAccess.getAndExpressionEltAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getOrExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
	rule__OrExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getLeftAssignment_1()); }
	(rule__OrExpression__LeftAssignment_1)
	{ after(grammarAccess.getOrExpressionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__2__Impl
	rule__OrExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOpAssignment_2()); }
	(rule__OrExpression__OpAssignment_2)
	{ after(grammarAccess.getOrExpressionAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__3__Impl
	rule__OrExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_3()); }
	(rule__OrExpression__RightAssignment_3)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__4__Impl
	rule__OrExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOrExpressionAccess().getOrEltsAssignment_4()); }
		(rule__OrExpression__OrEltsAssignment_4)
		{ after(grammarAccess.getOrExpressionAccess().getOrEltsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getOrExpressionAccess().getOrEltsAssignment_4()); }
		(rule__OrExpression__OrEltsAssignment_4)*
		{ after(grammarAccess.getOrExpressionAccess().getOrEltsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__5__Impl
	rule__OrExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getOrExpressionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getCheckedAssignment_6()); }
	(rule__OrExpression__CheckedAssignment_6)?
	{ after(grammarAccess.getOrExpressionAccess().getCheckedAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpressionElt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpressionElt__Group__0__Impl
	rule__OrExpressionElt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpressionElt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionEltAccess().getOpAssignment_0()); }
	(rule__OrExpressionElt__OpAssignment_0)
	{ after(grammarAccess.getOrExpressionEltAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpressionElt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpressionElt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpressionElt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionEltAccess().getRightAssignment_1()); }
	(rule__OrExpressionElt__RightAssignment_1)
	{ after(grammarAccess.getOrExpressionEltAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CatExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatExpression__Group__0__Impl
	rule__CatExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatExpressionAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getCatExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatExpression__Group__1__Impl
	rule__CatExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatExpressionAccess().getLeftAssignment_1()); }
	(rule__CatExpression__LeftAssignment_1)
	{ after(grammarAccess.getCatExpressionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatExpression__Group__2__Impl
	rule__CatExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatExpressionAccess().getOpAssignment_2()); }
	(rule__CatExpression__OpAssignment_2)
	{ after(grammarAccess.getCatExpressionAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatExpression__Group__3__Impl
	rule__CatExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatExpressionAccess().getRightAssignment_3()); }
	(rule__CatExpression__RightAssignment_3)
	{ after(grammarAccess.getCatExpressionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatExpression__Group__4__Impl
	rule__CatExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCatExpressionAccess().getCatEltsAssignment_4()); }
		(rule__CatExpression__CatEltsAssignment_4)
		{ after(grammarAccess.getCatExpressionAccess().getCatEltsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getCatExpressionAccess().getCatEltsAssignment_4()); }
		(rule__CatExpression__CatEltsAssignment_4)*
		{ after(grammarAccess.getCatExpressionAccess().getCatEltsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatExpression__Group__5__Impl
	rule__CatExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatExpressionAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getCatExpressionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatExpressionAccess().getCheckedAssignment_6()); }
	(rule__CatExpression__CheckedAssignment_6)?
	{ after(grammarAccess.getCatExpressionAccess().getCheckedAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CatExpressionElt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatExpressionElt__Group__0__Impl
	rule__CatExpressionElt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpressionElt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatExpressionEltAccess().getOpAssignment_0()); }
	(rule__CatExpressionElt__OpAssignment_0)
	{ after(grammarAccess.getCatExpressionEltAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpressionElt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatExpressionElt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpressionElt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatExpressionEltAccess().getRightAssignment_1()); }
	(rule__CatExpressionElt__RightAssignment_1)
	{ after(grammarAccess.getCatExpressionEltAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group__0__Impl
	rule__ListExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getOpAssignment_0()); }
	(rule__ListExpression__OpAssignment_0)
	{ after(grammarAccess.getListExpressionAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group__1__Impl
	rule__ListExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getLeftAssignment_1()); }
	(rule__ListExpression__LeftAssignment_1)
	{ after(grammarAccess.getListExpressionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group__2__Impl
	rule__ListExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListExpressionAccess().getListEltsAssignment_2()); }
		(rule__ListExpression__ListEltsAssignment_2)
		{ after(grammarAccess.getListExpressionAccess().getListEltsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getListExpressionAccess().getListEltsAssignment_2()); }
		(rule__ListExpression__ListEltsAssignment_2)*
		{ after(grammarAccess.getListExpressionAccess().getListEltsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group__3__Impl
	rule__ListExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getListExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getGroup_4()); }
	(rule__ListExpression__Group_4__0)?
	{ after(grammarAccess.getListExpressionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_4__0__Impl
	rule__ListExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getNumTypeAssignment_4_0()); }
	(rule__ListExpression__NumTypeAssignment_4_0)
	{ after(grammarAccess.getListExpressionAccess().getNumTypeAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_4__1__Impl
	rule__ListExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getStrTypeAssignment_4_1()); }
	(rule__ListExpression__StrTypeAssignment_4_1)
	{ after(grammarAccess.getListExpressionAccess().getStrTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_4__2__Impl
	rule__ListExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getDateTypeAssignment_4_2()); }
	(rule__ListExpression__DateTypeAssignment_4_2)
	{ after(grammarAccess.getListExpressionAccess().getDateTypeAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getBoolTypeAssignment_4_3()); }
	(rule__ListExpression__BoolTypeAssignment_4_3)
	{ after(grammarAccess.getListExpressionAccess().getBoolTypeAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListExpressionElt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpressionElt__Group__0__Impl
	rule__ListExpressionElt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpressionElt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionEltAccess().getOpAssignment_0()); }
	(rule__ListExpressionElt__OpAssignment_0)
	{ after(grammarAccess.getListExpressionEltAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpressionElt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpressionElt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpressionElt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionEltAccess().getRightAssignment_1()); }
	(rule__ListExpressionElt__RightAssignment_1)
	{ after(grammarAccess.getListExpressionEltAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_0__0__Impl
	rule__RangeExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getListExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getRangeExpressionAccess().getListExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_0__1__Impl
	rule__RangeExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getLeftParenthesisKeyword_0_1()); }
	LeftParenthesis
	{ after(grammarAccess.getRangeExpressionAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_0__2__Impl
	rule__RangeExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getRangeAssignment_0_2()); }
	(rule__RangeExpression__RangeAssignment_0_2)
	{ after(grammarAccess.getRangeExpressionAccess().getRangeAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_0__3__Impl
	rule__RangeExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getRightParenthesisKeyword_0_3()); }
	RightParenthesis
	{ after(grammarAccess.getRangeExpressionAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getGroup_0_4()); }
	(rule__RangeExpression__Group_0_4__0)?
	{ after(grammarAccess.getRangeExpressionAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_0_4__0__Impl
	rule__RangeExpression__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getNumTypeAssignment_0_4_0()); }
	(rule__RangeExpression__NumTypeAssignment_0_4_0)
	{ after(grammarAccess.getRangeExpressionAccess().getNumTypeAssignment_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_0_4__1__Impl
	rule__RangeExpression__Group_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getStrTypeAssignment_0_4_1()); }
	(rule__RangeExpression__StrTypeAssignment_0_4_1)
	{ after(grammarAccess.getRangeExpressionAccess().getStrTypeAssignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_0_4__2__Impl
	rule__RangeExpression__Group_0_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getDateTypeAssignment_0_4_2()); }
	(rule__RangeExpression__DateTypeAssignment_0_4_2)
	{ after(grammarAccess.getRangeExpressionAccess().getDateTypeAssignment_0_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_0_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_0_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getBoolTypeAssignment_0_4_3()); }
	(rule__RangeExpression__BoolTypeAssignment_0_4_3)
	{ after(grammarAccess.getRangeExpressionAccess().getBoolTypeAssignment_0_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__0__Impl
	rule__RangeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getListExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getRangeExpressionAccess().getListExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__1__Impl
	rule__RangeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getLeftParenthesisKeyword_1_1()); }
	(LeftParenthesis)
	{ after(grammarAccess.getRangeExpressionAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__2__Impl
	rule__RangeExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getRangeAssignment_1_2()); }
	(rule__RangeExpression__RangeAssignment_1_2)
	{ after(grammarAccess.getRangeExpressionAccess().getRangeAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__3__Impl
	rule__RangeExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getRightParenthesisKeyword_1_3()); }
	RightParenthesis
	{ after(grammarAccess.getRangeExpressionAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getGroup_1_4()); }
	(rule__RangeExpression__Group_1_4__0)?
	{ after(grammarAccess.getRangeExpressionAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1_4__0__Impl
	rule__RangeExpression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getNumTypeAssignment_1_4_0()); }
	(rule__RangeExpression__NumTypeAssignment_1_4_0)
	{ after(grammarAccess.getRangeExpressionAccess().getNumTypeAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1_4__1__Impl
	rule__RangeExpression__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getStrTypeAssignment_1_4_1()); }
	(rule__RangeExpression__StrTypeAssignment_1_4_1)
	{ after(grammarAccess.getRangeExpressionAccess().getStrTypeAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1_4__2__Impl
	rule__RangeExpression__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getDateTypeAssignment_1_4_2()); }
	(rule__RangeExpression__DateTypeAssignment_1_4_2)
	{ after(grammarAccess.getRangeExpressionAccess().getDateTypeAssignment_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getBoolTypeAssignment_1_4_3()); }
	(rule__RangeExpression__BoolTypeAssignment_1_4_3)
	{ after(grammarAccess.getRangeExpressionAccess().getBoolTypeAssignment_1_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_0__0__Impl
	rule__TerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getStrValueAction_0_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getStrValueAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
	(rule__TerminalExpression__ValueAssignment_0_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_1__0__Impl
	rule__TerminalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getIntValueAction_1_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getIntValueAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
	(rule__TerminalExpression__ValueAssignment_1_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_2__0__Impl
	rule__TerminalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getDecValueAction_2_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getDecValueAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
	(rule__TerminalExpression__ValueAssignment_2_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_3__0__Impl
	rule__TerminalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getChrValueAction_3_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getChrValueAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_3_1()); }
	(rule__TerminalExpression__ValueAssignment_3_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_4__0__Impl
	rule__TerminalExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getCstValueAction_4_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getCstValueAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_4_1()); }
	(rule__TerminalExpression__ValueAssignment_4_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_5__0__Impl
	rule__TerminalExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getBoolValueAction_5_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getBoolValueAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_5_1()); }
	(rule__TerminalExpression__ValueAssignment_5_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_6__0__Impl
	rule__TerminalExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getUnsetValueAction_6_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getUnsetValueAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_6_1()); }
	(rule__TerminalExpression__ValueAssignment_6_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierExpression__Group__0__Impl
	rule__IdentifierExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierExpressionAccess().getIdentifierExpressionAction_0()); }
	()
	{ after(grammarAccess.getIdentifierExpressionAccess().getIdentifierExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierExpressionAccess().getValueAssignment_1()); }
	(rule__IdentifierExpression__ValueAssignment_1)
	{ after(grammarAccess.getIdentifierExpressionAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_0()); }
	(rule__QualifiedName__Group_0__0)?
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_0__0__Impl
	rule__QualifiedName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getOBJIDTerminalRuleCall_0_0()); }
	RULE_OBJID
	{ after(grammarAccess.getQualifiedNameAccess().getOBJIDTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_0_1()); }
	FullStop
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LineComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineComment__Group__0__Impl
	rule__LineComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommentAccess().getCommentAction_0()); }
	()
	{ after(grammarAccess.getLineCommentAccess().getCommentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineComment__Group__1__Impl
	rule__LineComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LineComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommentAccess().getLineAssignment_1()); }
	(rule__LineComment__LineAssignment_1)
	{ after(grammarAccess.getLineCommentAccess().getLineAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommentAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
	{ after(grammarAccess.getLineCommentAccess().getEOLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TrailComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrailComment__Group__0__Impl
	rule__TrailComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrailComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrailCommentAccess().getCommentAction_0()); }
	()
	{ after(grammarAccess.getTrailCommentAccess().getCommentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrailComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrailComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrailComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrailCommentAccess().getLineAssignment_1()); }
	(rule__TrailComment__LineAssignment_1)
	{ after(grammarAccess.getTrailCommentAccess().getLineAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataModelFragment__ConstantsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelFragmentAccess().getConstantsConstantParserRuleCall_0_0()); }
		ruleConstant
		{ after(grammarAccess.getDataModelFragmentAccess().getConstantsConstantParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModelFragment__EntitiesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelFragmentAccess().getEntitiesEntityParserRuleCall_1_0()); }
		ruleEntity
		{ after(grammarAccess.getDataModelFragmentAccess().getEntitiesEntityParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModelFragment__ConstraintsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelFragmentAccess().getConstraintsConstraintParserRuleCall_2_0()); }
		ruleConstraint
		{ after(grammarAccess.getDataModelFragmentAccess().getConstraintsConstraintParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ExtraAttrDescAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getExtraAttrDescLineCommentParserRuleCall_0_0()); }
		ruleLineComment
		{ after(grammarAccess.getConstantAccess().getExtraAttrDescLineCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__DataTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getDataTypeDataTypeEnumRuleCall_1_0()); }
		ruleDataType
		{ after(grammarAccess.getConstantAccess().getDataTypeDataTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__AttributeSizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getAttributeSizeAttributeSizeParserRuleCall_2_0()); }
		ruleAttributeSize
		{ after(grammarAccess.getConstantAccess().getAttributeSizeAttributeSizeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ArraySizeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getArraySizeArraySizeParserRuleCall_3_0()); }
		ruleArraySize
		{ after(grammarAccess.getConstantAccess().getArraySizeArraySizeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNameCSTIDTerminalRuleCall_4_0()); }
		RULE_CSTID
		{ after(grammarAccess.getConstantAccess().getNameCSTIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__DefaultValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getDefaultValueSharkExpressionParserRuleCall_5_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getConstantAccess().getDefaultValueSharkExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__AttrDescAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getAttrDescTrailCommentParserRuleCall_6_0()); }
		ruleTrailComment
		{ after(grammarAccess.getConstantAccess().getAttrDescTrailCommentParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__EntityDescLinesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getEntityDescLinesLineCommentParserRuleCall_0_0()); }
		ruleLineComment
		{ after(grammarAccess.getEntityAccess().getEntityDescLinesLineCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameOBJIDTerminalRuleCall_1_0()); }
		RULE_OBJID
		{ after(grammarAccess.getEntityAccess().getNameOBJIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ExtendsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getExtendsEntityCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getEntityAccess().getExtendsEntityIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityAccess().getExtendsEntityIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getEntityAccess().getExtendsEntityCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttributesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0()); }
		ruleAttribute
		{ after(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__RelationshipsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getRelationshipsRelationshipParserRuleCall_6_0()); }
		ruleRelationship
		{ after(grammarAccess.getEntityAccess().getRelationshipsRelationshipParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ExtraAttrDescAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getExtraAttrDescLineCommentParserRuleCall_0_0()); }
		ruleLineComment
		{ after(grammarAccess.getAttributeAccess().getExtraAttrDescLineCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__DataTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getDataTypeDataTypeEnumRuleCall_1_0()); }
		ruleDataType
		{ after(grammarAccess.getAttributeAccess().getDataTypeDataTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AttributeSizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAttributeSizeAttributeSizeParserRuleCall_2_0()); }
		ruleAttributeSize
		{ after(grammarAccess.getAttributeAccess().getAttributeSizeAttributeSizeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ArraySizeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getArraySizeArraySizeParserRuleCall_3_0()); }
		ruleArraySize
		{ after(grammarAccess.getAttributeAccess().getArraySizeArraySizeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__DefaultValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getDefaultValueSharkExpressionParserRuleCall_5_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getAttributeAccess().getDefaultValueSharkExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__PrimaryKeyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getPrimaryKeyPkKeyword_6_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getPrimaryKeyPkKeyword_6_0()); }
			Pk
			{ after(grammarAccess.getAttributeAccess().getPrimaryKeyPkKeyword_6_0()); }
		)
		{ after(grammarAccess.getAttributeAccess().getPrimaryKeyPkKeyword_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__MandatoryAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getMandatoryExclamationMarkKeyword_7_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getMandatoryExclamationMarkKeyword_7_0()); }
			ExclamationMark
			{ after(grammarAccess.getAttributeAccess().getMandatoryExclamationMarkKeyword_7_0()); }
		)
		{ after(grammarAccess.getAttributeAccess().getMandatoryExclamationMarkKeyword_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AttrDescAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAttrDescTrailCommentParserRuleCall_8_0()); }
		ruleTrailComment
		{ after(grammarAccess.getAttributeAccess().getAttrDescTrailCommentParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__LengthAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSizeAccess().getLengthINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAttributeSizeAccess().getLengthINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSize__PrecisionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSizeAccess().getPrecisionINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAttributeSizeAccess().getPrecisionINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__SizeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraySizeAccess().getSizeINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getArraySizeAccess().getSizeINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Cardi1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getCardi1RangeExpressionParserRuleCall_0_0()); }
		ruleRangeExpression
		{ after(grammarAccess.getRelationshipAccess().getCardi1RangeExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationshipAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Cardi2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getCardi2RangeExpressionParserRuleCall_2_0()); }
		ruleRangeExpression
		{ after(grammarAccess.getRelationshipAccess().getCardi2RangeExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__LinkToAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getLinkToEntityCrossReference_3_0()); }
		(
			{ before(grammarAccess.getRelationshipAccess().getLinkToEntityOBJIDTerminalRuleCall_3_0_1()); }
			RULE_OBJID
			{ after(grammarAccess.getRelationshipAccess().getLinkToEntityOBJIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getRelationshipAccess().getLinkToEntityCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__RelDescAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getRelDescTrailCommentParserRuleCall_4_0()); }
		ruleTrailComment
		{ after(grammarAccess.getRelationshipAccess().getRelDescTrailCommentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ChkDescLinesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getChkDescLinesLineCommentParserRuleCall_0_0()); }
		ruleLineComment
		{ after(grammarAccess.getConstraintAccess().getChkDescLinesLineCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getNameCHKIDTerminalRuleCall_1_0()); }
		RULE_CHKID
		{ after(grammarAccess.getConstraintAccess().getNameCHKIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__CheckAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getCheckCheckExpressionParserRuleCall_4_0()); }
		ruleCheckExpression
		{ after(grammarAccess.getConstraintAccess().getCheckCheckExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__ChkDescAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckExpressionAccess().getChkDescLineCommentParserRuleCall_0_0()); }
		ruleLineComment
		{ after(grammarAccess.getCheckExpressionAccess().getChkDescLineCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCheckExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckExpressionAccess().getExprSharkExpressionParserRuleCall_2_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getCheckExpressionAccess().getExprSharkExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getBinaryExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getOpBinaryOperatorEnumRuleCall_2_0()); }
		ruleBinaryOperator
		{ after(grammarAccess.getBinaryExpressionAccess().getOpBinaryOperatorEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getBinaryExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__NumTypeAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getNumTypeNULLTerminalRuleCall_5_0_0()); }
		RULE_NULL
		{ after(grammarAccess.getBinaryExpressionAccess().getNumTypeNULLTerminalRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__StrTypeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getStrTypeNULLTerminalRuleCall_5_1_0()); }
		RULE_NULL
		{ after(grammarAccess.getBinaryExpressionAccess().getStrTypeNULLTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__DateTypeAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getDateTypeNULLTerminalRuleCall_5_2_0()); }
		RULE_NULL
		{ after(grammarAccess.getBinaryExpressionAccess().getDateTypeNULLTerminalRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__BoolTypeAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getBoolTypeNULLTerminalRuleCall_5_3_0()); }
		RULE_NULL
		{ after(grammarAccess.getBinaryExpressionAccess().getBoolTypeNULLTerminalRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_0_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getLeftSharkExpressionParserRuleCall_2_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getLeftSharkExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__NumTypeAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getNumTypeNULLTerminalRuleCall_4_0_0()); }
		RULE_NULL
		{ after(grammarAccess.getUnaryExpressionAccess().getNumTypeNULLTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__StrTypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getStrTypeNULLTerminalRuleCall_4_1_0()); }
		RULE_NULL
		{ after(grammarAccess.getUnaryExpressionAccess().getStrTypeNULLTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__DateTypeAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getDateTypeNULLTerminalRuleCall_4_2_0()); }
		RULE_NULL
		{ after(grammarAccess.getUnaryExpressionAccess().getDateTypeNULLTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__BoolTypeAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getBoolTypeNULLTerminalRuleCall_4_3_0()); }
		RULE_NULL
		{ after(grammarAccess.getUnaryExpressionAccess().getBoolTypeNULLTerminalRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getAddExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getOpAlternatives_2_0()); }
		(rule__AddExpression__OpAlternatives_2_0)
		{ after(grammarAccess.getAddExpressionAccess().getOpAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getAddExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__AddEltsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getAddEltsAddExpressionEltParserRuleCall_4_0()); }
		ruleAddExpressionElt
		{ after(grammarAccess.getAddExpressionAccess().getAddEltsAddExpressionEltParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__CheckedAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getCheckedNULLTerminalRuleCall_6_0()); }
		RULE_NULL
		{ after(grammarAccess.getAddExpressionAccess().getCheckedNULLTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpressionElt__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionEltAccess().getOpAlternatives_0_0()); }
		(rule__AddExpressionElt__OpAlternatives_0_0)
		{ after(grammarAccess.getAddExpressionEltAccess().getOpAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpressionElt__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getAddExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getMultExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpressionAccess().getOpAsteriskKeyword_2_0()); }
		(
			{ before(grammarAccess.getMultExpressionAccess().getOpAsteriskKeyword_2_0()); }
			Asterisk
			{ after(grammarAccess.getMultExpressionAccess().getOpAsteriskKeyword_2_0()); }
		)
		{ after(grammarAccess.getMultExpressionAccess().getOpAsteriskKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getMultExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__MultEltsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpressionAccess().getMultEltsMultExpressionEltParserRuleCall_4_0()); }
		ruleMultExpressionElt
		{ after(grammarAccess.getMultExpressionAccess().getMultEltsMultExpressionEltParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__CheckedAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpressionAccess().getCheckedNULLTerminalRuleCall_6_0()); }
		RULE_NULL
		{ after(grammarAccess.getMultExpressionAccess().getCheckedNULLTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpressionElt__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpressionEltAccess().getOpAsteriskKeyword_0_0()); }
		(
			{ before(grammarAccess.getMultExpressionEltAccess().getOpAsteriskKeyword_0_0()); }
			Asterisk
			{ after(grammarAccess.getMultExpressionEltAccess().getOpAsteriskKeyword_0_0()); }
		)
		{ after(grammarAccess.getMultExpressionEltAccess().getOpAsteriskKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpressionElt__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getMultExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getAndExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOpAndKeyword_2_0()); }
		(
			{ before(grammarAccess.getAndExpressionAccess().getOpAndKeyword_2_0()); }
			And
			{ after(grammarAccess.getAndExpressionAccess().getOpAndKeyword_2_0()); }
		)
		{ after(grammarAccess.getAndExpressionAccess().getOpAndKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__AndEltsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getAndEltsAndExpressionEltParserRuleCall_4_0()); }
		ruleAndExpressionElt
		{ after(grammarAccess.getAndExpressionAccess().getAndEltsAndExpressionEltParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__CheckedAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getCheckedNULLTerminalRuleCall_6_0()); }
		RULE_NULL
		{ after(grammarAccess.getAndExpressionAccess().getCheckedNULLTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionElt__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionEltAccess().getOpAndKeyword_0_0()); }
		(
			{ before(grammarAccess.getAndExpressionEltAccess().getOpAndKeyword_0_0()); }
			And
			{ after(grammarAccess.getAndExpressionEltAccess().getOpAndKeyword_0_0()); }
		)
		{ after(grammarAccess.getAndExpressionEltAccess().getOpAndKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionElt__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getAndExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getOrExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOpOrKeyword_2_0()); }
		(
			{ before(grammarAccess.getOrExpressionAccess().getOpOrKeyword_2_0()); }
			Or
			{ after(grammarAccess.getOrExpressionAccess().getOpOrKeyword_2_0()); }
		)
		{ after(grammarAccess.getOrExpressionAccess().getOpOrKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OrEltsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOrEltsOrExpressionEltParserRuleCall_4_0()); }
		ruleOrExpressionElt
		{ after(grammarAccess.getOrExpressionAccess().getOrEltsOrExpressionEltParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__CheckedAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getCheckedNULLTerminalRuleCall_6_0()); }
		RULE_NULL
		{ after(grammarAccess.getOrExpressionAccess().getCheckedNULLTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpressionElt__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionEltAccess().getOpOrKeyword_0_0()); }
		(
			{ before(grammarAccess.getOrExpressionEltAccess().getOpOrKeyword_0_0()); }
			Or
			{ after(grammarAccess.getOrExpressionEltAccess().getOpOrKeyword_0_0()); }
		)
		{ after(grammarAccess.getOrExpressionEltAccess().getOpOrKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpressionElt__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getOrExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getCatExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatExpressionAccess().getOpAmpersandKeyword_2_0()); }
		(
			{ before(grammarAccess.getCatExpressionAccess().getOpAmpersandKeyword_2_0()); }
			Ampersand
			{ after(grammarAccess.getCatExpressionAccess().getOpAmpersandKeyword_2_0()); }
		)
		{ after(grammarAccess.getCatExpressionAccess().getOpAmpersandKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getCatExpressionAccess().getRightSharkExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__CatEltsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatExpressionAccess().getCatEltsCatExpressionEltParserRuleCall_4_0()); }
		ruleCatExpressionElt
		{ after(grammarAccess.getCatExpressionAccess().getCatEltsCatExpressionEltParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpression__CheckedAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatExpressionAccess().getCheckedNULLTerminalRuleCall_6_0()); }
		RULE_NULL
		{ after(grammarAccess.getCatExpressionAccess().getCheckedNULLTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpressionElt__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatExpressionEltAccess().getOpAmpersandKeyword_0_0()); }
		(
			{ before(grammarAccess.getCatExpressionEltAccess().getOpAmpersandKeyword_0_0()); }
			Ampersand
			{ after(grammarAccess.getCatExpressionEltAccess().getOpAmpersandKeyword_0_0()); }
		)
		{ after(grammarAccess.getCatExpressionEltAccess().getOpAmpersandKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatExpressionElt__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getCatExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getOpLeftParenthesisKeyword_0_0()); }
		(
			{ before(grammarAccess.getListExpressionAccess().getOpLeftParenthesisKeyword_0_0()); }
			LeftParenthesis
			{ after(grammarAccess.getListExpressionAccess().getOpLeftParenthesisKeyword_0_0()); }
		)
		{ after(grammarAccess.getListExpressionAccess().getOpLeftParenthesisKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getListExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__ListEltsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getListEltsListExpressionEltParserRuleCall_2_0()); }
		ruleListExpressionElt
		{ after(grammarAccess.getListExpressionAccess().getListEltsListExpressionEltParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__NumTypeAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getNumTypeNULLTerminalRuleCall_4_0_0()); }
		RULE_NULL
		{ after(grammarAccess.getListExpressionAccess().getNumTypeNULLTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__StrTypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getStrTypeNULLTerminalRuleCall_4_1_0()); }
		RULE_NULL
		{ after(grammarAccess.getListExpressionAccess().getStrTypeNULLTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__DateTypeAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getDateTypeNULLTerminalRuleCall_4_2_0()); }
		RULE_NULL
		{ after(grammarAccess.getListExpressionAccess().getDateTypeNULLTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__BoolTypeAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getBoolTypeNULLTerminalRuleCall_4_3_0()); }
		RULE_NULL
		{ after(grammarAccess.getListExpressionAccess().getBoolTypeNULLTerminalRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpressionElt__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionEltAccess().getOpCommaKeyword_0_0()); }
		(
			{ before(grammarAccess.getListExpressionEltAccess().getOpCommaKeyword_0_0()); }
			Comma
			{ after(grammarAccess.getListExpressionEltAccess().getOpCommaKeyword_0_0()); }
		)
		{ after(grammarAccess.getListExpressionEltAccess().getOpCommaKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpressionElt__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
		ruleSharkExpression
		{ after(grammarAccess.getListExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__RangeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getRangeRANGETerminalRuleCall_0_2_0()); }
		RULE_RANGE
		{ after(grammarAccess.getRangeExpressionAccess().getRangeRANGETerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__NumTypeAssignment_0_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getNumTypeNULLTerminalRuleCall_0_4_0_0()); }
		RULE_NULL
		{ after(grammarAccess.getRangeExpressionAccess().getNumTypeNULLTerminalRuleCall_0_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__StrTypeAssignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getStrTypeNULLTerminalRuleCall_0_4_1_0()); }
		RULE_NULL
		{ after(grammarAccess.getRangeExpressionAccess().getStrTypeNULLTerminalRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__DateTypeAssignment_0_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getDateTypeNULLTerminalRuleCall_0_4_2_0()); }
		RULE_NULL
		{ after(grammarAccess.getRangeExpressionAccess().getDateTypeNULLTerminalRuleCall_0_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__BoolTypeAssignment_0_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getBoolTypeNULLTerminalRuleCall_0_4_3_0()); }
		RULE_NULL
		{ after(grammarAccess.getRangeExpressionAccess().getBoolTypeNULLTerminalRuleCall_0_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__RangeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getRangeRANGEINFTerminalRuleCall_1_2_0()); }
		RULE_RANGEINF
		{ after(grammarAccess.getRangeExpressionAccess().getRangeRANGEINFTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__NumTypeAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getNumTypeNULLTerminalRuleCall_1_4_0_0()); }
		RULE_NULL
		{ after(grammarAccess.getRangeExpressionAccess().getNumTypeNULLTerminalRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__StrTypeAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getStrTypeNULLTerminalRuleCall_1_4_1_0()); }
		RULE_NULL
		{ after(grammarAccess.getRangeExpressionAccess().getStrTypeNULLTerminalRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__DateTypeAssignment_1_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getDateTypeNULLTerminalRuleCall_1_4_2_0()); }
		RULE_NULL
		{ after(grammarAccess.getRangeExpressionAccess().getDateTypeNULLTerminalRuleCall_1_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__BoolTypeAssignment_1_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getBoolTypeNULLTerminalRuleCall_1_4_3_0()); }
		RULE_NULL
		{ after(grammarAccess.getRangeExpressionAccess().getBoolTypeNULLTerminalRuleCall_1_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getValueSTRTerminalRuleCall_0_1_0()); }
		RULE_STR
		{ after(grammarAccess.getTerminalExpressionAccess().getValueSTRTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getValueINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTerminalExpressionAccess().getValueINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getValueDECTerminalRuleCall_2_1_0()); }
		RULE_DEC
		{ after(grammarAccess.getTerminalExpressionAccess().getValueDECTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getValueCHRTerminalRuleCall_3_1_0()); }
		RULE_CHR
		{ after(grammarAccess.getTerminalExpressionAccess().getValueCHRTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getValueConstantCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getTerminalExpressionAccess().getValueConstantCSTIDTerminalRuleCall_4_1_0_1()); }
			RULE_CSTID
			{ after(grammarAccess.getTerminalExpressionAccess().getValueConstantCSTIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getTerminalExpressionAccess().getValueConstantCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getValueBooleanEnumRuleCall_5_1_0()); }
		ruleBoolean
		{ after(grammarAccess.getTerminalExpressionAccess().getValueBooleanEnumRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getValueUnsetEnumRuleCall_6_1_0()); }
		ruleUnset
		{ after(grammarAccess.getTerminalExpressionAccess().getValueUnsetEnumRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierExpressionAccess().getValueAttributeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getIdentifierExpressionAccess().getValueAttributeQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getIdentifierExpressionAccess().getValueAttributeQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getIdentifierExpressionAccess().getValueAttributeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineComment__LineAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineCommentAccess().getLineCMTTerminalRuleCall_1_0()); }
		RULE_CMT
		{ after(grammarAccess.getLineCommentAccess().getLineCMTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrailComment__LineAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrailCommentAccess().getLineCMTTerminalRuleCall_1_0()); }
		RULE_CMT
		{ after(grammarAccess.getTrailCommentAccess().getLineCMTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
